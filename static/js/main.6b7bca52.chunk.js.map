{"version":3,"sources":["components/Translate.js","functions/distance.js","functions/data.txt","functions/fetch.js","functions/findClosest.js","functions/ssw.js","functions/towd.js","App.js","reportWebVitals.js","index.js"],"names":["Translate","translate","useState","value","setValue","loading","setLoading","className","id","label","placeholder","multiline","onChange","event","target","LoadingButton","variant","onClick","then","editDist","str1","str2","m","n","x","y","z","distance","s1","toLowerCase","s2","length","fetchData","a","result","fetch","raw","r","text","split","forEach","sentence","pair","push","findClosest","str","index","minDis","array","signWriting","ssw","re","encode","replace","chr","charCodeAt","toString","substr","toUpperCase","decode","match","String","fromCharCode","parseInt","code","chars","swu2hex","RegExp","line","parse","find","all","pos","info","start","hex","num","type","indexOf","slice","fsw2swu","coord","key","i","fsw","len","matches","map","c","join","uni","swu2fsw","syms","sym","hexcode","symcode","base","fill","coords","n1","n2","codePointAt","symbol","style","sign","mirror","extra","parsed","size","rAdd","rot","key1","key2","step","rotate","scroll","nkey","view","structure","division","option","adj","arr","kind","category","group","end","is","range","char","filter","random","swu","rBase","Math","floor","rFill","rRota","colorize","color","fillone","prefix","plane","hexval","bbox","x1","x2","y1","y2","min","max","displace","xpos","ypos","sizes","w","h","s","imgData","bound","canvaser","document","createElement","width","height","context","getContext","clearRect","font","fillText","getImageData","data","wloop","hloop","ceil","sizefix","ipos","iend","output","norm","minx","maxx","miny","maxy","hbox","vbox","box","xdiff","ydiff","svg","options","styling","stylings","keysize","colors","gelem","parseFloat","pad","test","back","E","F","copy","rs","substring","class","o","L","R","k","l","charAt","keysized","css","laned","canvas","rsym","rect","fillStyle","png","toDataURL","remove","query","queryu","query2swu","from","to","segment","query2fsw","re_sym","re_coord","q_range","q_sym","pattern","diff","tmax","rangeu","parts","ranges","symfr","f","regex","fuzz","fsw_pattern","part","q_term","re_word","re_term","q_coord","q_style","segments","term","qat","matched","regexu","results","lane","words","element","resultsu","lines","linesu","convert","flags","re_base","convertu","paragraph","signtext","zoom","swuChange","oned","trim","App","translated","setTranslated","towd","setTowd","resultEnglish","setResultEnglish","translateToSignWriting","td","dangerouslySetInnerHTML","__html","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6b7bca52.chunk.js","sourcesContent":["import {useState} from 'react';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport MaterialTextField from '@mui/material/TextField';\n\n\nconst Translate = ({translate}) => {\n  const [value, setValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  \n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const handleClick = () => {\n    setLoading(true);\n    translate(value).then(() => {\n      setLoading(false);\n    });\n  }\n  \n  return (\n    <div className=\"d-flex flex-column align-items-center\">\n      <MaterialTextField\n      id=\"outlined-textarea\"\n      label=\"English Text\"\n      placeholder=\"English Text\"\n      multiline\n      value={value}\n      onChange={handleChange}\n    />\n    <br />\n    <LoadingButton variant=\"contained\" loading={loading} onClick ={handleClick} >Translate</LoadingButton>\n    </div>\n\n  );\n};\n\nexport default Translate;","function min(x, y, z)\n{\n    if (x <= y && x <= z)\n        return x;\n    if (y <= x && y <= z)\n        return y;\n    else\n        return z;\n}\n  \nfunction editDist(str1, str2, m, n)\n{\n      \n    // If first string is empty, the \n    // only option is to insert all \n    // characters of second string leto first\n    if (m == 0)\n        return n;\n  \n    // If second string is empty, the only\n    // option is to remove all characters \n    // of first string\n    if (n == 0)\n        return m;\n  \n    // If last characters of two strings are\n    // same, nothing much to do. Ignore last \n    // characters and get count for remaining \n    // strings.\n    if (str1[m - 1] == str2[n - 1])\n        return editDist(str1, str2, m - 1, n - 1);\n  \n    // If last characters are not same, consider all\n    // three operations on last character of first\n    // string, recursively compute minimum cost for all\n    // three operations and take minimum of three\n    // values.\n    return 1 + \n    min(editDist(str1, str2, m, n - 1), // Insert\n        editDist(str1, str2, m - 1, n), // Remove\n        editDist(str1, str2, m - 1, n - 1)); // Replace\n}\n\n\nconst distance = (str1, str2) => {\n    const s1 = str1.toLowerCase();\n    const s2 = str2.toLowerCase();\n  const result = editDist(s1, s2, s1.length, s2.length);\n  return result;\n}\n\nexport default distance;","export default __webpack_public_path__ + \"static/media/data.3ea43089.txt\";","import raw from './data.txt';\n\n\nconst fetchData = async () => {\n    const result=[];\n    await fetch(raw)\n    .then(r => r.text())\n    .then(text => {\n      var lines = text.split(/\\r?\\n/);\n      lines.forEach(sentence => {\n        var pair = sentence.split(/\\t¿/);\n        result.push(pair);\n      })\n    });\n    return result;\n}\n\n\nexport default fetchData;","import distance from './distance';\nimport fetchData from './fetch';\n\nconst findClosest = async (str) => {\n    let index = 0 ;\n    let minDis = str.length/2;\n    let result = -1;\n    let signWriting;\n    const array = await fetchData();\n    const length = array.length;\n    while(index<length){\n        const s1 = str.toLowerCase();\n        const s2 = array[index][1].toLowerCase();\n        if(s1 === s2){\n            result = index;\n        }\n        index++;\n    }\n    if(result === -1){\n      index = 0;\n      while(index<length){\n        if(!((array[index][1].length < (str.length/2)) || (str.length < (array[index][1].length/2)))){\n          const dis = distance(str, array[index][1]);\n          if(dis < minDis) {\n              result = index;\n          }\n        }\n        index++;\n      }\n    }\n    if(result===-1){\n        signWriting = 'not found';\n    }\n    else{\n        signWriting = [];\n        signWriting[0] = array[result][0]; \n        signWriting[1] = array[result][1]; \n    }\n    return signWriting;\n}\nexport default findClosest;","/**\n* Sutton SignWriting JavaScript Library v2.3.1\n* https://github.com/Slevinski/SuttonSignWriting\n* Copyright (c) 2007-2019, Stephen E Slevinski Jr\n* SuttonSignWriting.js is released under the MaIT License.\n*/\nvar ssw = {\n    re : {\n      \"fsw\": {\n        \"sign\": \"(A(S[123][0-9a-f]{2}[0-5][0-9a-f])+)?[BLMR]([0-9]{3}x[0-9]{3})(S[123][0-9a-f]{2}[0-5][0-9a-f][0-9]{3}x[0-9]{3})*\",\n        \"spatial\": \"S[123][0-9a-f]{2}[0-5][0-9a-f][0-9]{3}x[0-9]{3}\",\n        \"symbol\": \"S[123][0-9a-f]{2}[0-5][0-9a-f]\",\n        \"coord\": \"[0-9]{3}x[0-9]{3}\",\n        \"sort\": \"A\",\n        \"box\": \"[BLMR]\",\n        \"query\": \"Q((A(S[123][0-9a-f]{2}[0-5u][0-9a-fu]|R[123][0-9a-f]{2}t[123][0-9a-f]{2})+)?T)?((R[123][0-9a-f]{2}t[123][0-9a-f]{2}([0-9]{3}x[0-9]{3})?)|(S[123][0-9a-f]{2}[0-5u][0-9a-fu]([0-9]{3}x[0-9]{3})?))*(V[0-9]+)?-?\"\n                  \n      },\n      \"swu\": {\n        \"sign\": \"(\\uD836\\uDC00(((\\uD8C0[\\uDC01-\\uDFFF])|([\\uD8C1-\\uD8FB][\\uDC00-\\uDFFF])|(\\uD8FC[\\uDC00-\\uDEA0])))+)?\\uD836[\\uDC01-\\uDC04](\\uD836[\\uDC0C-\\uDDFF]){2}(((\\uD8C0[\\uDC01-\\uDFFF])|([\\uD8C1-\\uD8FA][\\uDC00-\\uDFFF])|(\\uD8FB[\\uDC00-\\uDFA0]))(\\uD836[\\uDC0C-\\uDDFF]){2})*\",\n        \"spatial\": \"((\\uD8C0[\\uDC01-\\uDFFF])|([\\uD8C1-\\uD8FC][\\uDC00-\\uDFFF])|(\\uD8FD[\\uDC00-\\uDC80]))(\\uD836[\\uDC0C-\\uDDFF]){2}\",\n        \"symbol\": \"((\\uD8C0[\\uDC01-\\uDFFF])|([\\uD8C1-\\uD8FC][\\uDC00-\\uDFFF])|(\\uD8FD[\\uDC00-\\uDC80]))\",\n        \"coord\": \"(\\uD836[\\uDC0C-\\uDDFF]){2}\",\n        \"sort\": \"\\uD836\\uDC00\",\n        \"box\": \"\\uD836[\\uDC01-\\uDC04]\",\n        \"query\": \"Q((A(((\\uD8C0[\\uDC01-\\uDFFF])|([\\uD8C1-\\uD8FC][\\uDC00-\\uDFFF])|(\\uD8FD[\\uDC00-\\uDC80]))f?r?|R((\\uD8C0[\\uDC01-\\uDFFF])|([\\uD8C1-\\uD8FC][\\uDC00-\\uDFFF])|(\\uD8FD[\\uDC00-\\uDC80]))((\\uD8C0[\\uDC01-\\uDFFF])|([\\uD8C1-\\uD8FC][\\uDC00-\\uDFFF])|(\\uD8FD[\\uDC00-\\uDC80])))+)?T)?((R((\\uD8C0[\\uDC01-\\uDFFF])|([\\uD8C1-\\uD8FC][\\uDC00-\\uDFFF])|(\\uD8FD[\\uDC00-\\uDC80]))((\\uD8C0[\\uDC01-\\uDFFF])|([\\uD8C1-\\uD8FC][\\uDC00-\\uDFFF])|(\\uD8FD[\\uDC00-\\uDC80]))(\\uD836[\\uDC0C-\\uDDFF]\\uD836[\\uDC0C-\\uDDFF])?)|(((\\uD8C0[\\uDC01-\\uDFFF])|([\\uD8C1-\\uD8FC][\\uDC00-\\uDFFF])|(\\uD8FD[\\uDC00-\\uDC80]))f?r?(\\uD836[\\uDC0C-\\uDDFF]\\uD836[\\uDC0C-\\uDDFF])?))*(V[0-9]+)?-?\"\n      },\n      \"style\": \"-C?(P[0-9]{2})?(G_([0-9a-fA-F]{3}([0-9a-fA-F]{3})?|[a-zA-Z]+)_)?(D_([0-9a-fA-F]{3}([0-9a-fA-F]{3})?|[a-zA-Z]+)(,([0-9a-fA-F]{3}([0-9a-fA-F]{3})?|[a-zA-Z]+))?_)?(Z([0-9]+(.[0-9]+)?|x))?(-(D[0-9]{2}_([0-9a-fA-F]{3}([0-9a-fA-F]{3})?|[a-zA-Z]+)(,([0-9a-fA-F]{3}([0-9a-fA-F]{3})?|[a-zA-Z]+))?_)*(Z[0-9]{2},[0-9]+(.[0-9]+)?(,[0-9]{3}x[0-9]{3})?)*)?(--?[_a-zA-Z][_a-zA-Z0-9-]{0,100}( -?[_a-zA-Z][_a-zA-Z0-9-]{0,100})*!([a-zA-Z][_a-zA-Z0-9-]{0,100}!)?)?\"\n    },\n    encode: function(text){\n      text = text.replace(/[\\u007F-\\uFFFF]/g, function(chr) {\n        return \"\\\\u\" + (\"0000\" + chr.charCodeAt(0).toString(16)).substr(-4).toUpperCase();\n      });\n      return text;\n    },\n    decode: function(text){\n      text = text.replace(/\\\\u([0-9A-F]{4})/g, function (match, chr) {\n        return String.fromCharCode(parseInt(chr, 16));\n      });\n      return text;\n    },\n    pair: function(value){\n      //utf-16 code points\n      var code;\n      if (ssw.chars(value)==\"swu\"){\n        value = ssw.swu2hex(value);\n      }\n      var re = '[0-9A-F]{5}';\n      var swu2hex = value.match(new RegExp(re));\n      if (swu2hex) {\n        code = parseInt(value,16);\n      } else {\n        return false;\n      }\n      var str = String.fromCharCode(0xD800 + (((code) - 0x10000) >> 10), 0xDC00 + (((code) - 0x10000) & 0x3FF));\n      if (value && str.length == 2){\n        return [str.charCodeAt(0).toString(16).toUpperCase(),str.charCodeAt(1).toString(16).toUpperCase()];\n      } else {\n        return false;\n      }\n    },\n    chars: function(line){\n      if (!line) return '';\n      var re,match;\n      re = '^[A-F0-9]{5}';\n      var hex = line.match(new RegExp(re));\n      if (hex) {\n        return \"hex\";\n      }\n  \n      var re = '^[ABLMRSxa-f0-9]{5,}';\n      var fsw = line.match(new RegExp(re));\n      if (fsw) {\n        return \"fsw\";\n      }\n  \n      re = '^[0-9]{3}';\n      var num = line.match(new RegExp(re));\n      if (num) {\n        return \"num\";\n      }\n  \n      //rangeu(\"1D800\",\"1D9FF\");\n      //rangeu(\"40001\",\"4F480\")\n      var re = \"^((\\uD836[\\uDC00-\\uDDFF])|(\\uD8C0[\\uDC01-\\uDFFF])|([\\uD8C1-\\uD8FC][\\uDC00-\\uDFFF])|(\\uD8FD[\\uDC00-\\uDC80]))+\";\n      var swu = line.match(new RegExp(re));\n      if (swu) {\n        return \"swu\";\n      }\n      return '';\n    },\n    parse: function(line,find,all){\n      var start = (find||all)?\"\":\"^\";\n      var re,match,pos,info;\n      switch(find || ssw.chars(line)){\n        case \"hex\":\n          re = start + '[A-F0-9]{5}';\n          var hex = line.match(new RegExp(re,all?\"g\":''));\n          if (hex) {\n            info = {chars:\"hex\",\"hex\":hex[0]};\n            if (all){\n              info[\"all\"] = hex;\n            } else {\n              info[\"line\"] = line;\n            }\n            return info;\n          }\n          break;\n        case \"num\":\n          re = start + '[0-9]{3}';\n          var num = line.match(new RegExp(re,all?\"g\":''));\n          if (num) {\n            info = {chars:\"num\",\"num\":num[0]};\n            if (all){\n              info[\"all\"] = num;\n            } else {\n              info[\"line\"] = line;\n            }\n            return info;\n          }\n          break;\n        case \"fsw\":\n          if (all){\n            re = start + \"(\" + ssw.re[\"fsw\"][\"sign\"] + \"(\" + ssw.re[\"style\"] + \")?|\" + ssw.re[\"fsw\"][\"spatial\"] + \"(\" + ssw.re[\"style\"] + \")?)\";\n          } else {\n            re = start + ssw.re[\"fsw\"][\"sign\"] + \"(\" + ssw.re[\"style\"] + \")?\";\n          }\n          match = line.match(new RegExp(re,all?\"g\":''));\n          if (match) {\n            info = {chars:\"fsw\",type:\"sign\"};\n            if (all){\n              info[\"all\"] = match;\n            } else {\n              info[\"line\"] = line;\n            }\n            pos = match[0].indexOf(\"-\");\n            if (pos>-1){\n              info[\"fsw\"] = match[0].slice(0,pos);\n              info[\"style\"] = match[0].slice(pos);\n            } else {\n              info[\"fsw\"] = match[0];\n            }\n            return info;\n          }\n          re = start + ssw.re[\"fsw\"][\"spatial\"] + \"(\" + ssw.re[\"style\"] + \")?\";\n          match = line.match(new RegExp(re,all?\"g\":''));\n          if (match) {\n            info = {chars:\"fsw\",type:\"spatial\"};\n            if (all){\n              info[\"all\"] = match;\n            } else {\n              info[\"line\"] = line;\n            }\n            pos = match[0].indexOf(\"-\");\n            if (pos>-1){\n              info[\"fsw\"] = match[0].slice(0,pos);\n              info[\"style\"] = match[0].slice(pos);\n            } else {\n              info[\"fsw\"] = match[0];\n            }\n            return info;\n          }\n          re = start + ssw.re[\"fsw\"][\"symbol\"] + \"(\" + ssw.re[\"style\"] + \")?\";\n          match = line.match(new RegExp(re,all?\"g\":''));\n          if (match) {\n            info = {chars:\"fsw\",type:\"symbol\"};\n            if (all){\n              info[\"all\"] = match;\n            } else {\n              info[\"line\"] = line;\n            }\n            pos = match[0].indexOf(\"-\");\n            if (pos>-1){\n              info[\"fsw\"] = match[0].slice(0,pos);\n              info[\"style\"] = match[0].slice(pos);\n            } else {\n              info[\"fsw\"] = match[0];\n            }\n            return info;\n          }\n          re = start + ssw.re[\"fsw\"][\"coord\"];\n          match = line.match(new RegExp(re,all?\"g\":''));\n          if (match) {\n            info = {chars:\"fsw\",type:\"coord\",\"fsw\":match[0]};\n            if (all){\n              info[\"all\"] = match;\n            } else {\n              info[\"line\"] = line;\n            }\n            return info;\n          }\n          break;\n        case \"swu\":\n          if (all){\n            re = start + \"(\" + ssw.re[\"swu\"][\"sign\"] + \"(\" + ssw.re[\"style\"] + \")?|\" + ssw.re[\"swu\"][\"spatial\"] + \"(\" + ssw.re[\"style\"] + \")?)\";\n          } else {\n            re = start + ssw.re[\"swu\"][\"sign\"] + \"(\" + ssw.re[\"style\"] + \")?\";\n          }\n          match = line.match(new RegExp(re,all?\"g\":''));\n          if (match) {\n            info = {chars:\"swu\",type:\"sign\"};\n            if (all){\n              info[\"all\"] = match;\n            } else {\n              info[\"line\"] = line;\n            }\n            pos = match[0].indexOf(\"-\");\n            if (pos>-1){\n              info[\"swu\"] = match[0].slice(0,pos);\n              info[\"style\"] = match[0].slice(pos);\n            } else {\n              info[\"swu\"] = match[0];\n            }\n            return info;\n          }\n          re = start + ssw.re[\"swu\"][\"spatial\"] + \"(\" + ssw.re[\"style\"] + \")?\";\n          match = line.match(new RegExp(re,all?\"g\":''));\n          if (match) {\n            info = {chars:\"swu\",type:\"spatial\"};\n            if (all){\n              info[\"all\"] = match;\n            } else {\n              info[\"line\"] = line;\n            }\n            pos = match[0].indexOf(\"-\");\n            if (pos>-1){\n              info[\"swu\"] = match[0].slice(0,pos);\n              info[\"style\"] = match[0].slice(pos);\n            } else {\n              info[\"swu\"] = match[0];\n            }\n            return info;\n          }\n          re = start + ssw.re[\"swu\"][\"symbol\"] + \"(\" + ssw.re[\"style\"] + \")?\";\n          match = line.match(new RegExp(re,all?\"g\":''));\n          if (match) {\n            info = {chars:\"swu\",type:\"symbol\"};\n            if (all){\n              info[\"all\"] = match;\n            } else {\n              info[\"line\"] = line;\n            }\n            pos = match[0].indexOf(\"-\");\n            if (pos>-1){\n              info[\"swu\"] = match[0].slice(0,pos);\n              info[\"style\"] = match[0].slice(pos);\n            } else {\n              info[\"swu\"] = match[0];\n            }\n            return info;\n          }\n          re = start + ssw.re[\"swu\"][\"coord\"];\n          match = line.match(new RegExp(re,all?\"g\":''));\n          if (match) {\n            info = {chars:\"swu\",type:\"coord\",\"swu\":match[0]};\n            if (all){\n              info[\"all\"] = match;\n            } else {\n              info[\"line\"] = line;\n            }\n            return info;\n          }\n          break;\n      }\n      return false;\n    },\n    fsw2swu: function(text){\n      if (!text) return '';\n      var code = parseInt('1D800',16);\n      var fsw = text.replace(/B/g,'B!');\n      var len,str,coord,key;\n      fsw = fsw.replace(/A/g,String.fromCharCode(0xD800 + (((code) - 0x10000) >> 10), 0xDC00 + (((code) - 0x10000) & 0x3FF)));\n      fsw = fsw.replace(/B!/g,String.fromCharCode(0xD800 + (((code+1) - 0x10000) >> 10), 0xDC00 + (((code+1) - 0x10000) & 0x3FF)));\n      fsw = fsw.replace(/L/g,String.fromCharCode(0xD800 + (((code+2) - 0x10000) >> 10), 0xDC00 + (((code+2) - 0x10000) & 0x3FF)));\n      fsw = fsw.replace(/M/g,String.fromCharCode(0xD800 + (((code+3) - 0x10000) >> 10), 0xDC00 + (((code+3) - 0x10000) & 0x3FF)));\n      fsw = fsw.replace(/R/g,String.fromCharCode(0xD800 + (((code+4) - 0x10000) >> 10), 0xDC00 + (((code+4) - 0x10000) & 0x3FF)));\n      var matches = fsw.match(new RegExp(ssw.re['fsw']['coord'],'g'));\n      len = matches?matches.length:0;\n      var i;\n      for(i=0; i<len; i+=1) {\n        str = matches[i];\n        coord = str.split('x');\n        coord = coord.map(function(c){  \n          c = 0x1D80C + parseInt(c) - 250;\n          return String.fromCharCode(0xD800 + ((c - 0x10000) >> 10), 0xDC00 + ((c - 0x10000) & 0x3FF));\n        });\n        fsw = fsw.replace(str,coord.join(''));\n      }\n      var pattern = 'S[123][0-9a-f]{2}[0-5][0-9a-f]';\n      var matches = fsw.match(new RegExp(pattern,'g'));\n      var len = matches?matches.length:0;\n      for(i=0; i<len; i+=1) {\n        key = matches[i];\n        fsw = fsw.replace(key,ssw.uni(key,\"4\"));\n      }\n      return fsw;\n    },\n    swu2fsw: function(text){\n      if (!text) return '';\n      var fsw=text.replace(/𝠀/g,\"A\").replace(/𝠁/g,\"B\").replace(/𝠂/g,\"L\").replace(/𝠃/g,\"M\").replace(/𝠄/g,\"R\");\n      var syms = fsw.match(new RegExp(ssw.re['swu']['symbol'],'g'));\n      if (syms) {\n        syms.forEach(function(sym){\n          var hexcode = ssw.swu2hex(sym);\n          var symcode = parseInt(hexcode.slice(1),16) -1;\n          var base = parseInt(symcode/96);\n          var key = \"S\" + (base+256).toString(16);\n          var fill = parseInt((symcode-(base*96))/16);\n          key += fill.toString(16);\n          var rot = parseInt(symcode-(base*96)-(fill*16));\n          key += rot.toString(16);\n          fsw = fsw.replace(sym,key);\n        });\n      }\n      var coords = fsw.match(new RegExp(ssw.re['swu']['coord'],'g'));\n      if (coords) {\n        coords.forEach(function(coord){\n          var n1 = parseInt(ssw.swu2hex(coord.slice(0,2)),16) - 0X1D80C + 250;\n          var n2 = parseInt(ssw.swu2hex(coord.slice(2,4)),16) - 0X1D80C + 250;\n          if (n1>=250 && n1<749 && n2>=250 && n2<749){\n            fsw = fsw.replace(coord,n1 + \"x\" + n2);\n          } else {\n            throw(\"invalid numbers: \" + n1 + \", \" + n2);\n          }\n        });\n      }\n      return fsw;\n    },\n    swu2hex: function (value){\n      var cp = value.codePointAt(0);\n      if (cp) {\n        var hex = value.codePointAt(0).toString(16).toUpperCase();\n        if (hex.length<=4) return false;\n        return hex;\n      } else {\n        return false;\n      }\n    },\n    symbol: function(text,style){\n      var parsed = ssw.parse(text);\n      var re;\n      switch(parsed['chars']){\n        case \"swu\":\n          re = ssw.re[\"swu\"][\"symbol\"] + \"(\" + ssw.re[\"swu\"][\"coord\"] + \")?\";\n          break;\n        case \"fsw\":\n          re = ssw.re[\"fsw\"][\"symbol\"] + \"(\" + ssw.re[\"fsw\"][\"coord\"] + \")?\";\n          break;\n        default:\n          return '';\n      }\n      if (style){\n        re += '(' + ssw.re['style'] + ')?';\n      }\n      var key = text.match(new RegExp(re));\n      if (!key) {\n        return '';\n      } else {\n        return key[0];\n      }\n    },\n    sign: function(text,style){\n      var parsed = ssw.parse(text);\n      var re;\n      switch(parsed['chars']){\n        case \"swu\":\n          re = ssw.re[\"swu\"][\"sign\"];\n          break;\n        case \"fsw\":\n          re = ssw.re[\"fsw\"][\"sign\"];\n          break;\n        default:\n          return '';\n      }\n      if (style){\n        re += '(' + ssw.re['style'] + ')?';\n      }\n      var fsw = text.match(new RegExp(re));\n      if (!fsw) {\n        return ssw.symbol(text,style);\n      } else {\n        return fsw[0];\n      }\n    },\n    mirror: function(key){\n      key = ssw.symbol(key);\n      var extra;\n      var parsed = ssw.parse(key);\n      switch(parsed['chars']){\n        case \"swu\":\n          extra = key.slice(2);\n          key = ssw.swu2fsw(key.slice(0,2));\n          break;\n        case \"fsw\":\n          extra = key.slice(6);\n          key = ssw.swu2fsw(key.slice(0,6));\n          break;\n        default:\n          return false;\n      }\n      if (!ssw.size(key)) {return '';}\n      var base = key.slice(0,4);\n      var fill = key.slice(4,5);\n      var rot = parseInt(key.slice(5,6),16);\n      var key1 = base + \"08\";\n      var key2 = base + \"18\";\n      var rAdd;\n      if (ssw.size(key1) || ssw.size(key2)){\n        rAdd = 8;\n      } else {\n        if ((rot===0) || (rot==4)) {rAdd=0;}\n        if ((rot==1) || (rot==5)) {rAdd=6;}\n        if ((rot==2) || (rot==6)) {rAdd=4;}\n        if ((rot==3) || (rot==7)) {rAdd=2;}\n      }\n      key='';\n      while (!ssw.size(key)) {\n        rot += rAdd;\n        if ((rot>7) && (rAdd<8)) { rot = rot -8;}\n        if (rot>15) { rot = rot -16;}\n        key = base + fill + rot.toString(16);\n      }\n      if (parsed['chars'] == \"swu\") {\n        key = ssw.fsw2swu(key);\n      }\n      return key + extra;\n    },\n    fill: function(key,step){\n      key = ssw.symbol(key);\n      var extra;\n      var parsed = ssw.parse(key);\n      switch(parsed['chars']){\n        case \"swu\":\n          extra = key.slice(2);\n          key = ssw.swu2fsw(key.slice(0,2));\n          break;\n        case \"fsw\":\n          extra = key.slice(6);\n          key = ssw.swu2fsw(key.slice(0,6));\n          break;\n        default:\n          return false;\n      }\n      if (!ssw.size(key)) {return '';}\n      if (step!=-1) {step=1;}\n      var base = key.slice(0,4);\n      var fill = parseInt(key.slice(4,5));\n      var rot = key.slice(5,6);\n      key='';\n      while (!ssw.size(key)){\n        fill += step;\n        if (fill>5) {fill=0;}\n        if (fill<0) {fill=5;}\n        key = base + fill + rot;\n      }\n      if (parsed['chars'] == \"swu\") {\n        key = ssw.fsw2swu(key);\n      }\n      return key + extra;\n    },\n    rotate: function(key,step){\n      key = ssw.symbol(key);\n      var extra;\n      var parsed = ssw.parse(key);\n      switch(parsed['chars']){\n        case \"swu\":\n          extra = key.slice(2);\n          key = ssw.swu2fsw(key.slice(0,2));\n          break;\n        case \"fsw\":\n          extra = key.slice(6);\n          key = ssw.swu2fsw(key.slice(0,6));\n          break;\n        default:\n          return false;\n      }\n      if (!ssw.size(key)) {return '';}\n      if (step!=-1) {step=1;}\n      var base = key.slice(0,4);\n      var fill = key.slice(4,5);\n      var rot = parseInt(key.slice(5,6),16);\n      key='';\n      while (!ssw.size(key)){\n        if (rot>7){\n          rot += step;\n          if (rot>15) {rot=8;}\n          if (rot<8) {rot=15;}\n          key = base + fill + rot.toString(16);\n        } else {\n          rot -= step;\n          if (rot>7) {rot=0;}\n          if (rot<0) {rot=7;}\n          key = base + fill + rot;\n        }\n      }\n      if (parsed['chars'] == \"swu\") {\n        key = ssw.fsw2swu(key);\n      }\n      return key + extra;\n    },\n    scroll: function(key,step){\n      key = ssw.symbol(key);\n      var extra;\n      var parsed = ssw.parse(key);\n      switch(parsed['chars']){\n        case \"swu\":\n          extra = key.slice(2);\n          key = ssw.swu2fsw(key.slice(0,2));\n          break;\n        case \"fsw\":\n          extra = key.slice(6);\n          key = ssw.swu2fsw(key.slice(0,6));\n          break;\n        default:\n          return false;\n      }\n      if (!ssw.size(key)) {return '';}\n      if (step!=-1) {step=1;}\n      var base = parseInt(key.slice(1,4),16) + step;\n      var fill = key.slice(4,5);\n      var rot = key.slice(5,6);\n      var nkey= 'S' + base.toString(16) + fill + rot;\n      if(ssw.size(nkey)){\n        key = nkey;\n      } else {\n        nkey = ssw.view(nkey);\n        if(ssw.size(nkey)){\n          key = nkey;\n        }\n      }\n      if (parsed['chars'] == \"swu\") {\n        key = ssw.fsw2swu(key);\n      }\n      return key + extra;\n    },\n    structure: function(division,key,option){\n      key = ssw.symbol(key);\n      var parsed = ssw.parse(key);\n      switch(parsed['chars']){\n        case \"swu\":\n          key = ssw.swu2fsw(key);\n        case \"fsw\":\n          break;\n        default:\n      }\n      var arrs = {kind:['S100','S37f','S387'],\n        category:['S100','S205','S2f7','S2ff','S36d','S37f','S387'],\n        group:['S100','S10e','S11e','S144','S14c','S186','S1a4','S1ba','S1cd','S1f5','S205','S216','S22a','S255','S265','S288','S2a6','S2b7','S2d5','S2e3','S2f7','S2ff','S30a','S32a','S33b','S359','S36d','S376','S37f','S387']\n      };\n      var arr = arrs[division];\n      if (!arr) {return !key?[]:option==\"is\"?false:'';}\n      if (!key&&!option) {return arr;}\n      if (!option) {option='';}\n      var adj;\n      switch(option){\n        case 'is':\n          return (arr.indexOf(key.slice(0,4))==-1)?false:true;\n        case 'first':\n          return arr[0];\n        case 'last':\n          return arr.slice(-1)[0];\n        case 'prev':\n          adj = -2;\n          break;\n        case '':\n          adj = -1;\n          break;\n        case 'next':\n          adj = 0;\n          break;\n        default:\n          return '';\n      }\n      var i;\n      var index = arr.length;\n      for(i=0; i<arr.length; i+=1) {\n        if(parseInt(key.slice(1,4),16) < parseInt(arr[i].slice(1,4),16)) {\n          index = i;\n          break;\n        }\n      }\n      index += adj;\n      index = index<0?0:index>=arr.length?arr.length-1:index;\n      return arr[index];\n    },\n    type: function(type){\n      var start;\n      var end;\n      switch(type) {\n        case \"writing\":\n          start = '100';\n          end = '37e';\n          break;\n        case \"hand\":\n          start = '100';\n          end = '204';\n          break;\n        case \"movement\":\n          start = '205';\n          end = '2f6';\n          break;\n        case \"dynamic\":\n          start = '2f7';\n          end = '2fe';\n          break;\n        case \"head\":\n        case \"hcenter\":\n          start = '2ff';\n          end = '36c';\n          break;\n        case \"vcenter\":\n          start = '2ff';\n          end = '375';\n          break;\n        case \"trunk\":\n          start = '36d';\n          end = '375';\n          break;\n        case \"limb\":\n          start = '376';\n          end = '37e';\n          break;\n        case \"location\":\n          start = '37f';\n          end = '386';\n          break;\n        case \"punctuation\":\n          start = '387';\n          end = '38b';\n          break;\n        default:\n          start = '100';\n          end = '38b';\n          break;\n      }\n      return [start,end];\n    },\n    is: function(key,type){\n      key = ssw.symbol(key);\n      var parsed = ssw.parse(key);\n      switch(parsed['chars']){\n        case \"swu\":\n          key = ssw.swu2fsw(key);\n        case \"fsw\":\n          break;\n        default:\n          return false;\n      }\n      var range = ssw.type(type);\n      var start = range[0];\n      var end = range[1];\n      var char = key.slice(1,4);\n      return (parseInt(start,16)<=parseInt(char,16) && parseInt(end,16)>=parseInt(char,16));\n    },\n    filter: function (text,type) {\n      var parsed,parts;\n      switch(ssw.chars(text)){\n        case \"swu\":\n          parsed = ssw.parse(text,\"swu\",\"spatials\");\n          text = ssw.swu2fsw((parsed.all||[]).join(''));\n          break;\n        case \"fsw\":\n          parsed = ssw.parse(text,\"fsw\",\"spatials\");\n          text = (parsed.all||[]).join('');\n          break;\n        default:\n          return '';\n      }\n      var range = ssw.type(type);\n      var start = range[0];\n      var end = range[1];\n      var re = 'S' + ssw.range(start,end,1) + '[0-5][0-9a-f][0-9]{3}x[0-9]{3}';\n      var matches = text.match(new RegExp(re,'g'));\n      if (!matches){\n        return '';\n      }\n      text = matches.join('');\n      if (parsed['chars']==\"swu\"){\n        text = ssw.fsw2swu(text);\n      }\n      return text;\n    },\n    random: function(type,swu) {\n      var range = ssw.type(type);\n      var start = range[0];\n      var end = range[1];\n      var rBase = Math.floor(Math.random() * (parseInt(end,16)-parseInt(start,16)+1) + parseInt(start,16));\n      var rFill = Math.floor(Math.random() * 6);\n      var rRota = Math.floor(Math.random() * 16);\n      var key = \"S\" + rBase.toString(16) + rFill.toString(16) + rRota.toString(16);\n      if (ssw.size(key)){\n        if (swu){\n          return ssw.fsw2swu(key);\n        } else {\n          return key;\n        }\n      } else {\n        return ssw.random(type,swu);\n      }\n    },\n    colorize: function(key) {\n      key = ssw.symbol(key);\n      if (ssw.chars(key)==\"swu\"){\n        key = ssw.swu2fsw(key);\n      }\n      var color = '000000';\n      if (ssw.is(key,'hand')) {color = '0000CC';}\n      if (ssw.is(key,'movement')) {color = 'CC0000';}\n      if (ssw.is(key,'dynamic')) {color = 'FF0099';}\n      if (ssw.is(key,'head')) {color = '006600';}\n  //    if (ssw.is(key,'trunk')) {color = '000000';}\n  //    if (ssw.is(key,'limb')) {color = '000000';}\n      if (ssw.is(key,'location')) {color = '884411';}\n      if (ssw.is(key,'punctuation')) {color = 'FF9900';}\n      return color;\n    },\n    view: function(key,fillone) {\n      key = ssw.symbol(key);\n      var chars = ssw.chars(key);\n      if (chars==\"swu\"){\n        key = ssw.swu2fsw(key);\n      }\n      if (!ssw.is(key)) {return '';}\n      var prefix = key.slice(0,4);\n      if (fillone){\n        key = prefix + ((ssw.size(prefix + '00'))?'0':'1') +'0';\n      } else {\n        key = prefix + ((ssw.is(key,'hand') && !ssw.structure('group',key,'is'))?'1':'0') +'0';\n      }\n      if (chars==\"swu\"){\n        return ssw.fsw2swu(key);\n      } else {\n        return key;\n      }\n    },\n    uni: function(text,plane,hexval){\n      var parsed = ssw.parse(text);\n      var re,i,key;\n      switch(parsed['chars']){\n        case \"swu\":\n          re = ssw.re[\"swu\"][\"symbol\"];\n          break;\n        case \"fsw\":\n          re = ssw.re[\"fsw\"][\"symbol\"];\n          break;\n        case \"hex\":\n          re = '[0-9A-F]{5}';\n          break;\n        default:\n          return false;\n      }\n      var matches = text.match(new RegExp(re,'g'));\n      var len = matches?matches.length:0;\n      var code;\n      for(i=0; i<len; i+=1) {\n        key = matches[i];\n        switch(parsed['chars']){\n          case \"swu\":\n            key = ssw.swu2fsw(key);\n          case \"fsw\":\n            code = parseInt(plane + \"0000\", 16) + ((parseInt(key.slice(1,4),16) - 256) * 96) + ((parseInt(key.slice(4,5),16))*16) + parseInt(key.slice(5,6),16) + 1;\n            break;\n          case \"hex\":\n            code = parseInt(key,16);\n            break;\n        }\n        key = key.replace(key.substr(0,6),hexval?code.toString(16).toUpperCase():String.fromCharCode(0xD800 + ((code - 0x10000) >> 10), 0xDC00 + ((code - 0x10000) & 0x3FF)));\n        text = text.replace(matches[i],key);\n      }\n      return text;\n    },\n    bbox: function(fsw) {\n      var chars = ssw.chars(fsw);\n      if (chars==\"swu\"){\n        fsw = ssw.swu2fsw(fsw);\n      }\n      var rcoord = /[0-9]{3}x[0-9]{3}/g;\n      var x;\n      var y;\n      var x1;\n      var x2;\n      var y1;\n      var y2;\n      var coords = fsw.match(rcoord);\n      if (coords){\n        var i;\n        for (i=0; i < coords.length; i+=1) {\n          x = parseInt(coords[i].slice(0, 3));\n          y = parseInt(coords[i].slice(4, 7));\n          if (i===0){\n            x1 = x;\n            x2 = x;\n            y1 = y;\n            y2 = y;\n          } else {\n            x1 = Math.min(x1, x);\n            x2 = Math.max(x2, x);\n            y1 = Math.min(y1, y);\n            y2 = Math.max(y2, y);\n          }\n        }\n        if (x1==x2 && y1==y2){\n          if (x1>500) {\n            x1 = 1000 - x1;\n          } else {\n            x2 = 1000 - x2;\n          }\n          if (y1>500) {\n            y1 = 1000 - y1;\n          } else {\n            y2 = 1000 - y2;\n          }\n        }\n        if (chars == \"swu\"){\n          return ssw.fsw2swu('' + x1 + 'x' + x2 + '' + y1 + 'x' + y2);\n        } else {\n          return '' + x1 + ' ' + x2 + ' ' + y1 + ' ' + y2;\n        }\n      } else {\n        return '';\n      }\n    },\n    displace: function(text,x,y){\n      var chars = ssw.chars(text);\n      if (chars==\"swu\"){\n        text = ssw.swu2fsw(text);\n      }\n      var xpos;\n      var ypos;\n      var re = '[0-9]{3}x[0-9]{3}';\n      var matches = text.match(new RegExp(re,'g'));\n      if (matches){\n        var i;\n        for(i=0; i<matches.length; i+=1) {\n          xpos = parseInt(matches[i].slice(0, 3)) + x;\n          ypos = parseInt(matches[i].slice(4, 7)) + y;\n          text = text.replace(matches[i],xpos + \"X\" + ypos);\n        }\n        text = text.replace(/X/g,\"x\");\n      }\n      if (chars == \"swu\"){\n        return ssw.fsw2swu(text);\n      } else {\n        return text;\n      }\n      return text;\n    },\n    sizes:{\n    },\n    size: function(text) {\n      var parsed = ssw.parse(text);\n      switch(parsed['chars']){\n        case \"swu\":\n          text = ssw.swu2fsw(text);\n          break;\n        case \"fsw\":\n          break;\n        default:\n          return false;\n      }\n      if (parsed.type == \"sign\" || parsed.type == \"spatial\"){\n        var bbox = ssw.bbox(ssw.sign(text));\n        bbox = bbox.split(' ');\n        var x1 = bbox[0];\n        var x2 = bbox[1];\n        var y1 = bbox[2];\n        var y2 = bbox[3];\n        size = (x2-x1) + 'x' + (y2-y1);\n        if (size=='0x0') {return '';}\n        return size;\n      \n      }\n  \n      var w;\n      var h;\n      var s;\n      var size;\n  \n      var fsw = ssw.sign(text);\n      if (fsw) {\n      }\n      var key = ssw.symbol(text);\n      if (!key) {return '';}\n      if (ssw.sizes[key]) {return ssw.sizes[key];}\n  \n      var imgData;\n      var i;\n      var zoom = 2;\n      var bound = 76 * zoom;\n      if (!ssw.canvaser){\n        ssw.canvaser = document.createElement(\"canvas\");\n        ssw.canvaser.width = bound;\n        ssw.canvaser.height = bound;\n      }\n      var canvas = ssw.canvaser;\n      var context = canvas.getContext(\"2d\");\n      context.clearRect(0, 0, bound, bound);\n      context.font = (30*zoom) + \"px 'SuttonSignWritingLine'\";\n      context.fillText(ssw.uni(key,\"F\"),0,0);\n      imgData = context.getImageData(0,0,bound,bound).data;\n  \n      wloop:\n      for (w=bound-1;w>=0;w--){\n        for (h=0;h<bound;h+=1){\n          for (s=0;s<4;s+=1){\n            i=w*4+(h*4*bound) +s;\n            if (imgData[i]){\n              break wloop;\n            }\n          }\n        }\n      }\n      var width = w;\n      hloop:\n      for (h=bound-1;h>=0;h--){\n        for (w=0;w<width;w+=1){\n          for (s=0;s<4;s+=1){\n            i=w*4+(h*4*bound) +s;\n            if (imgData[i]){\n              break hloop;\n            }\n          }\n        }\n      }\n      var height = h+1;\n      width= '' + Math.ceil(width/zoom);\n      height= '' + Math.ceil(height/zoom);\n      // Rounding error in chrome.  Manual fixes.\n      if ('S19559'.indexOf(key)>-1){\n        width = '19';\n      }\n      if ('S16d03 S16d0f S16d1f S16d2f S16d23 S16d43 S16d53 S1710d S1711d S1712d S17311 S17321 S17733 S1773f S17743 S1774f S17753 S1775f S16d33 S1713d S1714d S17301 S17329 S1715d'.indexOf(key)>-1){\n        width = '20';\n      }\n      if ('S24c15 S24c30'.indexOf(key)>-1){\n        width = '22';\n      }\n      if ('S2903b'.indexOf(key)>-1){\n        width = '23';\n      }\n      if ('S1d203 S1d233'.indexOf(key)>-1){\n        width = '25';\n      }\n      if ('S24c15'.indexOf(key)>-1){\n        width = '28';\n      }\n      if ('S2e629'.indexOf(key)>-1){\n        width = '29';\n      }\n      if ('S23425'.indexOf(key)>-1){\n        width = '30';\n      }\n      if ('S2d316'.indexOf(key)>-1){\n        width = '40';\n      }\n      if ('S2541a'.indexOf(key)>-1){\n        width = '50';\n      }\n      if ('S1732f S17731 S17741 S17751'.indexOf(key)>-1){\n        height = '20';\n      }\n      if ('S1412c'.indexOf(key)>-1){\n        height = '21';\n      }\n      if ('S2a903'.indexOf(key)>-1){\n        height = '31';\n      }\n      if ('S2b002'.indexOf(key)>-1){\n        height = '36';\n      }\n      size = width + 'x' + height;\n      // Error in chrome.  Manual fix.\n      if (size=='0x0') {\n        var sizefix = 'S1000815x30 S1000921x30 S1000a30x15 S1000b30x21 S1000c15x30 S1000d21x30 ';\n        var ipos = sizefix.indexOf(key);\n        if (ipos ==-1) {\n          size = '';\n        } else {\n          var iend = sizefix.indexOf(' ',ipos);\n          size = sizefix.slice(ipos + 6,iend);\n        }\n      } else {\n        ssw.sizes[key]=size;\n      }\n      return size;\n    },\n    max: function(fsw,type){\n      var chars = ssw.chars(fsw);\n      if (chars==\"swu\"){\n        fsw = ssw.swu2fsw(fsw);\n      }\n      var range = ssw.type(type);\n      var start = range[0];\n      var end = range[1];\n      var re = 'S' + ssw.range(start,end,1) + '[0-5][0-9a-f][0-9]{3}x[0-9]{3}';\n      var matches = fsw.match(new RegExp(re,'g'));\n      if (matches){\n        var key;\n        var x;\n        var y;\n        var size;\n        var output='';\n        var i;\n        for (i=0; i < matches.length; i+=1) {\n          key = matches[i].slice(0,6);\n          x = parseInt(matches[i].slice(6, 9));\n          y = parseInt(matches[i].slice(10, 13));\n          size =ssw.size(key).split('x');\n          output += key + x + \"x\" + y + (x+parseInt(size[0])) + 'x' + (y+parseInt(size[1]));\n        }\n        if (chars==\"swu\"){\n          return ssw.fsw2swu(output);\n        } else {\n          return output;\n        }\n      } else {\n        return '';\n      }\n    },\n    norm: function (fsw){\n      var chars = ssw.chars(fsw);\n      if (chars==\"swu\"){\n        fsw = ssw.swu2fsw(fsw);\n      }\n      var minx;\n      var maxx;\n      var miny;\n      var maxy;\n      var hbox = ssw.bbox(ssw.max(fsw,'hcenter'));\n      var vbox = ssw.bbox(ssw.max(fsw,'vcenter'));\n      var box = ssw.bbox(ssw.max(fsw));\n      \n      if (!box) {return \"\";}\n      if (vbox){\n        minx = parseInt(vbox.slice(0,3));\n        maxx = parseInt(vbox.slice(4,7));\n      } else {\n        minx = parseInt(box.slice(0,3));\n        maxx = parseInt(box.slice(4,7));\n      }\n      if (hbox){\n        miny = parseInt(hbox.slice(8,11));\n        maxy = parseInt(hbox.slice(12,15));\n      } else {\n        miny = parseInt(box.slice(8,11));\n        maxy = parseInt(box.slice(12,15));\n      }\n      var xcenter = parseInt((minx + maxx)/2);\n      var ycenter = parseInt((miny + maxy)/2);\n      var xdiff = 500 - xcenter;\n      var ydiff = 500 - ycenter;\n      var start = fsw.match(/(A(S[123][0-9a-f]{2}[0-5][0-9a-f])+)?[BLMR]/);\n      if (!start) {\n        start = 'M';\n      } else {\n        start = start[0];\n      }\n      fsw = start + parseInt(box.slice(4,7)) + \"x\" + parseInt(box.slice(12,15)) + ssw.filter(fsw);\n      fsw = ssw.displace(fsw,xdiff,ydiff);\n      if (chars==\"swu\"){\n        return ssw.fsw2swu(fsw);\n      } else {\n        return fsw;\n      }\n    },\n    svg: function(text,options){\n      var fsw = ssw.sign(text,true);\n      var parsed = ssw.parse(fsw);\n      var chars = parsed['chars'];\n      if (chars==\"swu\"){\n        fsw = ssw.swu2fsw(fsw);\n      }\n      if (!fsw) return '';\n      var pos = fsw.indexOf(\"-\");\n      var styling;\n      if (pos>-1){\n        styling = fsw.slice(pos);\n      }\n      var stylings;\n      var pos;\n      var keysize;\n      var colors;\n      var i;\n      var size;\n      if (parsed['type'] == \"symbol\") {\n        var key = ssw.symbol(fsw);\n        keysize = ssw.size(key);\n        if (!keysize) {return '';}\n        if (key.length==6) {\n          fsw = key + \"500x500\";\n        } else {\n          fsw = key;\n        }\n      }\n      if (!options) {\n        options = {};\n      }\n      if (options.size) {\n        options.size = parseFloat(options.size) || 'x';\n      } else {\n        options.size = 1;\n      }\n      if (options.colorize) {\n        options.colorize = true;\n      } else {\n        options.colorize = false;\n      }\n      if (options.pad) {\n        options.pad = parseInt(options.pad);\n      } else {\n        options.pad = 0;\n      }\n      if (!options.line){\n        options.line=\"black\";\n      } else {\n        options.line = /^[0-9a-fA-F]{3}([0-9a-fA-F]{3})?$/g.test(options.line)?\"#\"+options.line:options.line;\n      }\n      if (!options.fill){\n        options.fill=\"white\";\n      } else {\n        options.fill = /^[0-9a-fA-F]{3}([0-9a-fA-F]{3})?$/g.test(options.fill)?\"#\"+options.fill:options.fill;\n      }\n      if (!options.back){\n        options.back=\"\";\n      } else {\n        options.back = /^[0-9a-fA-F]{3}([0-9a-fA-F]{3})?$/g.test(options.back)?\"#\"+options.back:options.back;\n      }\n      options.E = [];\n      options.F = [];\n      options.copy = options.copy  || chars;\n  \n      if (styling){\n        var rs;\n        stylings = styling.split('-');\n        rs = stylings[1].match(/C/);\n        options.colorize = rs?true:false;\n  \n        rs = stylings[1].match(/P[0-9]{2}/);\n        if (rs){\n          options.pad = parseInt(rs[0].substring(1,rs[0].length));\n        }\n  \n        rs = stylings[1].match(/G_([0-9a-fA-F]{3}([0-9a-fA-F]{3})?|[a-zA-Z]+)_/);\n        if (rs){\n          var back = rs[0].substring(2,rs[0].length-1);\n          options.back = /^[0-9a-fA-F]{3}([0-9a-fA-F]{3})?$/g.test(back)?\"#\"+back:back;\n        }\n  \n        rs = stylings[1].match(/D_([0-9a-f]{3}([0-9a-f]{3})?|[a-zA-Z]+)(,([0-9a-f]{3}([0-9a-f]{3})?|[a-zA-Z]+))?_/);\n        if (rs) {\n          colors = rs[0].substring(2,rs[0].length-1).split(',');\n          if (colors[0]) {\n            options.line = /^[0-9a-fA-F]{3}([0-9a-fA-F]{3})?$/g.test(colors[0])?\"#\"+colors[0]:colors[0];\n          }\n          if (colors[1]) {\n            options.fill = /^[0-9a-fA-F]{3}([0-9a-fA-F]{3})?$/g.test(colors[1])?\"#\"+colors[1]:colors[1];\n          }\n        }\n  \n        rs = stylings[1].match(/Z([0-9]+(\\.[0-9]+)?|x)/);\n        if (rs){\n          options.size = parseFloat(rs[0].substring(1,rs[0].length)) || 'x';\n        }\n  \n        if (!stylings[2]) {\n          stylings[2]='';\n        }\n  \n        rs = stylings[2].match(/D[0-9]{2}_([0-9a-f]{3}([0-9a-f]{3})?|[a-wyzA-Z]+)(,([0-9a-f]{3}([0-9a-f]{3})?|[a-wyzA-Z]+))?_/g);\n        if (rs) {\n          for (i=0; i < rs.length; i+=1) {\n            pos = parseInt(rs[i].substring(1,3));\n            colors = rs[i].substring(4,rs[i].length-1).split(',');\n            if (colors[0]) {\n              colors[0] = /^[0-9a-fA-F]{3}([0-9a-fA-F]{3})?$/g.test(colors[0])?\"#\"+colors[0]:colors[0];\n            }\n            if (colors[1]) {\n              colors[1] = /^[0-9a-fA-F]{3}([0-9a-fA-F]{3})?$/g.test(colors[1])?\"#\"+colors[1]:colors[1];\n            }\n            options.E[pos]=colors;\n          }\n        }\n  \n        rs = stylings[2].match(/Z[0-9]{2},[0-9]+(\\.[0-9]+)?(,[0-9]{3}x[0-9]{3})?/g);\n        if (rs){\n          for (i=0; i < rs.length; i+=1) {\n            pos = parseInt(rs[i].substring(1,3));\n            size = rs[i].substring(4,rs[i].length).split(',');\n            size[0]=parseFloat(size[0]);\n            options.F[pos]=size;\n          }\n        }\n  \n        if (stylings.length>3){\n          stylings = stylings.slice(3).join('-').split('!');\n          options.class = stylings[0]?stylings[0]:'';\n          options.id = stylings[1]?stylings[1]:'';\n        }\n      }\n  \n      var sym;\n      var syms;\n      var gelem;\n      var rsym = /S[123][0-9a-f]{2}[0-5][0-9a-f][0-9]{3}x[0-9]{3}/g;\n      var o = {};\n      o.L = -1;\n      o.R = 1;\n      var x;\n      var x1 = 500;\n      var x2 = 500;\n      var y;\n      var y1 = 500;\n      var y2 = 500;\n      var k;\n      var w;\n      var h;\n      var l;\n      k = fsw.charAt(0);\n      var bbox = ssw.bbox(fsw);\n      bbox = bbox.split(' ');\n      x1 = parseInt(bbox[0]);\n      x2 = parseInt(bbox[1]);\n      y1 = parseInt(bbox[2]);\n      y2 = parseInt(bbox[3]);\n      if (k == 'S') {\n        if (x1==500 && y1==500){\n          size = keysize.split('x');\n          x2 = 500 + parseInt(size[0]);\n          y2 = 500 + parseInt(size[1]);\n        } else {\n          x2 = 1000-x1;\n          y2 = 1000-y1;\n        }\n      }\n      syms = fsw.match(rsym);\n      if (!syms) syms=[];\n      var keysized;\n      for (i=0; i < syms.length; i+=1) {\n        sym = syms[i].slice(0,6);\n        x = syms[i].slice(6, 9);\n        y = syms[i].slice(10, 13);\n        if (options.F[i+1]){\n          if (options.F[i+1][1]){\n            x = parseInt(x) + parseInt(options.F[i+1][1].slice(0,3))-500;\n            y = parseInt(y) + parseInt(options.F[i+1][1].slice(4,7))-500;\n            x1 = Math.min(x1,x);\n            y1 = Math.min(y1,y);\n          }\n          keysized = ssw.size(sym);\n          if (keysized) {\n            keysized = keysized.split('x');\n            x2 = Math.max(x2,parseInt(x) + (options.F[i+1][0] * parseInt(keysized[0])));\n            y2 = Math.max(y2,parseInt(y) + (options.F[i+1][0] * parseInt(keysized[1])));\n          }\n  \n        }\n        y = parseInt(y);\n        gelem = '<g transform=\"translate(' + x + ',' + y + ')\">';\n        gelem += '<text ';\n        gelem += 'class=\"sym-fill\" ';\n        if (!options.css) {\n          gelem += 'style=\"pointer-events:none;font-family:\\'SuttonSignWritingFill\\';font-size:' + (options.F[i+1]?30*options.F[i+1][0]:30) + 'px;fill:' + (options.E[i+1]?options.E[i+1][1]?options.E[i+1][1]:options.fill:options.fill) + ';';\n          gelem += '\"';\n        }\n        gelem += '>';\n        gelem += ssw.uni(sym,\"10\");\n        gelem += '</text>';\n        gelem += '<text ';\n        gelem += 'class=\"sym-line\" ';\n        if (!options.css) {\n          gelem += 'style=\"pointer-events:none;';\n          gelem += 'font-family:\\'SuttonSignWritingLine\\';font-size:' + (options.F[i+1]?30*options.F[i+1][0]:30) + 'px;fill:' + (options.E[i+1]?options.E[i+1][0]:options.colorize?'#'+ssw.colorize(sym):options.line) + ';';\n          gelem += '\"';\n        }\n        gelem += '>';\n        gelem += ssw.uni(sym,\"F\");\n        gelem += '</text>';\n        gelem += '</g>';\n        syms[i] = gelem;\n      }\n  \n      x1 = x1 - options.pad;\n      x2 = x2 + options.pad;\n      y1 = y1 - options.pad;\n      y2 = y2 + options.pad;\n      w = x2 - x1;\n      h = y2 - y1;\n      l = o[k] || 0;\n      l = l * 75 + x1 - 400;\n      var svg = '<svg ';\n      if (options.class) {\n        svg += 'class=\"' + options.class + '\" ';\n      }\n      if (options.id) {\n        svg += 'id=\"' + options.id + '\" ';\n      }\n      svg += 'version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" ';\n      if (options.size!='x') {\n        svg += 'width=\"' + (w * options.size) + '\" height=\"' + (h * options.size) + '\" ';\n      }\n      svg += 'viewBox=\"' + x1 + ' ' + y1 + ' ' + w + ' ' + h + '\">';\n      svg += '<text style=\"font-size:0%;\">';\n      if (options.copy == \"swu\"){\n        svg += ssw.fsw2swu(fsw);\n      } else {\n        svg += text;\n      }\n      svg += '</text>';\n      if (options.back) {\n        svg += '  <rect x=\"' + x1 + '\" y=\"' + y1 + '\" width=\"' + w + '\" height=\"' + h + '\" style=\"fill:' + options.back + ';\" />';\n      }\n      svg += syms.join('') + \"</svg>\";\n      if (options.laned){\n        svg = '<div style=\"padding:10px;position:relative;width:' + w + 'px;height:' + h + 'px;left:' + l + 'px;\">' + svg + '</div>';\n      }\n      return svg;\n    },\n    canvas: function(text,options){\n      var canvas = document.createElement(\"canvas\");\n      var fsw = ssw.sign(text,true);\n      var parsed = ssw.parse(fsw);\n      var chars = ssw.chars(fsw);\n      if (chars==\"swu\"){\n        fsw = ssw.swu2fsw(fsw);\n      }\n      var pos = fsw.indexOf(\"-\");\n      var styling;\n      if (pos>-1){\n        styling = fsw.slice(pos);\n      }\n      var stylings;\n      var colors;\n      var keysize;\n      var keysized;\n      var size;\n      var i;\n      var pos;\n      if (parsed['type'] == \"symbol\") {\n        var key = ssw.symbol(fsw);\n        keysize=ssw.size(key);\n        if (!key) {return '';}\n        if (key.length==6) {\n          fsw = key + \"500x500\";\n        } else {\n          fsw = key;\n        }\n      }\n      if (!options) {\n        options = {};\n      }\n      if (options.size) {\n        options.size = parseFloat(options.size);\n      } else {\n        options.size = 1;\n      }\n      if (options.colorize) {\n        options.colorize = true;\n      } else {\n        options.colorize = false;\n      }\n      if (options.pad) {\n        options.pad = parseInt(options.pad);\n      } else {\n        options.pad = 0;\n      }\n      if (!options.line){\n        options.line=\"black\";\n      } else {\n        options.line = /^[0-9a-fA-F]{3}([0-9a-fA-F]{3})?$/g.test(options.line)?\"#\"+options.line:options.line;\n      }\n      if (!options.fill){\n        options.fill=\"white\";\n      } else {\n        options.fill = /^[0-9a-fA-F]{3}([0-9a-fA-F]{3})?$/g.test(options.fill)?\"#\"+options.fill:options.fill;\n      }\n      if (!options.back){\n        options.back=\"\";\n      } else {\n        options.back = /^[0-9a-fA-F]{3}([0-9a-fA-F]{3})?$/g.test(options.back)?\"#\"+options.back:options.back;\n      }\n      options.E = [];\n      options.F = [];\n  \n      if (styling){\n        var rs;\n        stylings = styling.split('-');\n  \n        rs = stylings[1].match(/C/);\n        options.colorize = rs?true:false;\n  \n        rs = stylings[1].match(/P[0-9]{2}/);\n        if (rs){\n          options.pad = parseInt(rs[0].substring(1,rs[0].length));\n        }\n  \n        rs = stylings[1].match(/G_([0-9a-fA-F]{3}([0-9a-fA-F]{3})?|[a-zA-Z]+)_/);\n        if (rs){\n          var back = rs[0].substring(2,rs[0].length-1);\n          options.back = /^[0-9a-fA-F]{3}([0-9a-fA-F]{3})?$/g.test(back)?\"#\"+back:back;\n        }\n  \n        rs = stylings[1].match(/D_([0-9a-f]{3}([0-9a-f]{3})?|[a-zA-Z]+)(,([0-9a-f]{3}([0-9a-f]{3})?|[a-zA-Z]+))?_/);\n        if (rs) {\n          colors = rs[0].substring(2,rs[0].length-1).split(',');\n          if (colors[0]) {\n            options.line = /^[0-9a-fA-F]{3}([0-9a-fA-F]{3})?$/g.test(colors[0])?\"#\"+colors[0]:colors[0];\n          }\n          if (colors[1]) {\n            options.fill = /^[0-9a-fA-F]{3}([0-9a-fA-F]{3})?$/g.test(colors[1])?\"#\"+colors[1]:colors[1];\n          }\n        }\n  \n        rs = stylings[1].match(/Z[0-9]+(\\.[0-9]+)?/);\n        if (rs){\n          options.size = rs[0].substring(1,rs[0].length);\n        }\n  \n        if (!stylings[2]) {\n          stylings[2]='';\n        }\n  \n        rs = stylings[2].match(/D[0-9]{2}_([0-9a-f]{3}([0-9a-f]{3})?|[a-wyzA-Z]+)(,([0-9a-f]{3}([0-9a-f]{3})?|[a-wyzA-Z]+))?_/g);\n        if (rs) {\n          for (i=0; i < rs.length; i+=1) {\n            pos = parseInt(rs[i].substring(1,3));\n            colors = rs[i].substring(4,rs[i].length-1).split(',');\n            if (colors[0]) {\n              colors[0] = /^[0-9a-fA-F]{3}([0-9a-fA-F]{3})?$/g.test(colors[0])?\"#\"+colors[0]:colors[0];\n            }\n            if (colors[1]) {\n              colors[1] = /^[0-9a-fA-F]{3}([0-9a-fA-F]{3})?$/g.test(colors[1])?\"#\"+colors[1]:colors[1];\n            }\n            options.E[pos]=colors;\n          }\n        }\n  \n        rs = stylings[2].match(/Z[0-9]{2},[0-9]+(\\.[0-9]+)?(,[0-9]{3}x[0-9]{3})?/g);\n        if (rs){\n          for (i=0; i < rs.length; i+=1) {\n            pos = parseInt(rs[i].substring(1,3));\n            size = rs[i].substring(4,rs[i].length).split(',');\n            size[0]=parseFloat(size[0]);\n            options.F[pos]=size;\n          }\n        }\n      }\n  \n      var sym;\n      var syms;\n      var rsym = /S[123][0-9a-f]{2}[0-5][0-9a-f][0-9]{3}x[0-9]{3}/g;\n      var o = {};\n      o.L = -1;\n      o.R = 1;\n      var x;\n      var x1 = 500;\n      var x2 = 500;\n      var y;\n      var y1 = 500;\n      var y2 = 500;\n      var k;\n      var w;\n      var h;\n      k = fsw.charAt(0);\n      var bbox = ssw.bbox(fsw);\n      bbox = bbox.split(' ');\n      x1 = parseInt(bbox[0]);\n      x2 = parseInt(bbox[1]);\n      y1 = parseInt(bbox[2]);\n      y2 = parseInt(bbox[3]);\n  \n      if (k == 'S') {\n        if (x1==500 && y1==500){\n          size = keysize.split('x');\n          x2 = 500 + parseInt(size[0]);\n          y2 = 500 + parseInt(size[1]);\n        } else {\n          x2 = 1000-x1;\n          y2 = 1000-y1;\n        }\n      }\n  \n      syms = fsw.match(rsym);\n      var len = syms?syms.length:0;\n      for (i=0; i < len; i+=1) {\n        sym = syms[i].slice(0,6);\n        x = syms[i].slice(6, 9);\n        y = syms[i].slice(10, 13);\n        if (options.F[i+1]){\n          if (options.F[i+1][1]){\n            x = parseInt(x) + parseInt(options.F[i+1][1].slice(0,3))-500;\n            y = parseInt(y) + parseInt(options.F[i+1][1].slice(4,7))-500;\n            x1 = Math.min(x1,x);\n            y1 = Math.min(y1,y);\n          }\n          keysized = ssw.size(sym);\n          if (keysized) {\n            keysized = keysized.split('x');\n            x2 = Math.max(x2,parseInt(x) + (options.F[i+1][0] * parseInt(keysized[0])));\n            y2 = Math.max(y2,parseInt(y) + (options.F[i+1][0] * parseInt(keysized[1])));\n          }\n  \n        }\n      }\n  \n      x1 = x1 - options.pad;\n      x2 = x2 + options.pad;\n      y1 = y1 - options.pad;\n      y2 = y2 + options.pad;\n      w = (x2-x1) * options.size;\n      h = (y2-y1) * options.size;\n      canvas.width = w?w:1;\n      canvas.height = h?h:1;\n      var context = canvas.getContext(\"2d\");\n      if (options.back){\n        context.rect(0,0,w,h);\n        context.fillStyle=options.back;\n        context.fill();\n  //      context.fillStyle = options.back;\n  //      context.fillRect(0,0,w,h);\n      }\n      syms = fsw.match(rsym);\n      for (i=0; i < len; i+=1) {\n        sym = syms[i].slice(0,6);\n        x = syms[i].slice(6, 9);\n        y = syms[i].slice(10, 13);\n        if (options.F[i+1]){\n          if (options.F[i+1][1]){\n            x = parseInt(x) + parseInt(options.F[i+1][1].slice(0,3))-500;\n            y = parseInt(y) + parseInt(options.F[i+1][1].slice(4,7))-500;\n            x1 = Math.min(x1,x);\n            y1 = Math.min(y1,y);\n          }\n          keysized = ssw.size(sym);\n          if (keysized) {\n            keysized = keysized.split('x');\n            x2 = Math.max(x2,parseInt(x) + (options.F[i+1][0] * parseInt(keysized[0])));\n            y2 = Math.max(y2,parseInt(y) + (options.F[i+1][0] * parseInt(keysized[1])));\n          }\n  \n        }\n        context.font = (options.F[i+1]?30*options.size*options.F[i+1][0]:30*options.size) + \"px 'SuttonSignWritingFill'\";\n        context.fillStyle =  (options.E[i+1]?options.E[i+1][1]?options.E[i+1][1]:options.fill:options.fill);\n        context.fillText(ssw.uni(sym,\"10\"),((x-x1)*options.size),((y-y1)*options.size));\n        context.font = (options.F[i+1]?30*options.size*options.F[i+1][0]:30*options.size) + \"px 'SuttonSignWritingLine'\";\n        context.fillStyle = (options.E[i+1]?options.E[i+1][0]:options.colorize?'#'+ssw.colorize(sym):options.line);\n        context.fillText(ssw.uni(sym,\"F\"),((x-x1)*options.size),((y-y1)*options.size));\n      }\n      return canvas;\n    },\n    png: function (fsw,options){\n      var chars = ssw.chars(fsw);\n      if (chars==\"swu\"){\n        fsw = ssw.swu2fsw(fsw);\n      }\n      if (ssw.sign(fsw,true) || ssw.symbol(fsw,true) ){\n        var canvas = ssw.canvas(fsw,options);\n        var png = canvas.toDataURL(\"image/png\");\n        canvas.remove();\n        return png;\n      } else {\n        return '';\n      }\n    },\n    query: function (query){\n      if (query=='-') {\n        return '-';\n      }\n      query = query.match(new RegExp(ssw.re['fsw']['query']));\n      if (query) {\n        return query[0];\n      } else {\n        return '';\n      }\n    },\n    queryu: function (query){\n      if (query=='-') {\n        return '-';\n      }\n  \n      query = query.match(new RegExp(ssw.re['swu']['query']));\n      if (query) {\n        return query[0];\n      } else {\n        return '';\n      }\n    },\n    query2swu: function (query){\n      query = ssw.query(query);\n      if (!query) {\n        return '';\n      }\n      var matches;\n      var i;\n      var from;\n      var to;\n      var segment;\n      var key;\n      var fill;\n      var rotate;\n  \n      var re_coord = '[0-9]{3}x[0-9]{3}';\n      var q_range = 'R[123][0-9a-f]{2}t[123][0-9a-f]{2}';\n      var q_sym = 'S[123][0-9a-f]{2}[0-5u][0-9a-fu]';\n  \n      matches = query.match(new RegExp(re_coord,'g'));\n      if (matches){\n        for(i=0; i<matches.length; i+=1) {\n          query = query.replace(matches[i],ssw.fsw2swu(matches[i]));\n        }\n      }\n  \n      matches = query.match(new RegExp(q_range,'g'));\n      if (matches){\n        for(i=0; i<matches.length; i+=1) {\n          from = ssw.view('S' + matches[i].slice(1,4) + \"00\");\n          to = ssw.view('S' + matches[i].slice(5,8) + \"00\");\n          segment = \"R\" + ssw.fsw2swu(from) + ssw.fsw2swu(to);\n          query = query.replace(matches[i],segment);\n        }\n      }\n  \n      matches = query.match(new RegExp(q_sym,'g'));\n      if (matches){\n        for(i=0; i<matches.length; i+=1) {\n          key = matches[i].slice(0,4);\n          fill = matches[i].slice(4,5);\n          if (fill=='u') {\n            key += ssw.view(key + '00').slice(4,5);\n            fill = 'f';\n          } else {\n            key += fill;\n            fill = '';\n          }\n          rotate = matches[i].slice(5,6);\n          if (rotate=='u') {\n            key += '0';\n            rotate = 'r';\n          } else {\n            key += rotate;\n            rotate = '';\n          }\n          query = query.replace(matches[i],ssw.fsw2swu(key)+fill+rotate);\n        }\n      }\n      return query;\n    },\n    query2fsw: function (query){\n      query = ssw.queryu(query);\n      if (!query) {\n        return '';\n      }\n      var matches;\n      var i;\n      var from;\n      var to;\n      var segment;\n      var key;\n      var fill;\n      var rotate;\n  \n      var re_sym = ssw.re['swu']['symbol'];\n      var re_coord = ssw.re['swu']['coord'];\n  \n      var q_range = 'R' + re_sym + re_sym;\n      var q_sym = re_sym + 'f?r?';\n  \n      matches = query.match(new RegExp(re_coord,'g'));\n      if (matches){\n        for(i=0; i<matches.length; i+=1) {\n          query = query.replace(matches[i],ssw.swu2fsw(matches[i]));\n        }\n      }\n  \n      matches = query.match(new RegExp(q_range,'g'));\n      if (matches){\n        for(i=0; i<matches.length; i+=1) {\n          from = ssw.swu2fsw(matches[i].slice(1,3)).slice(1,4);\n          to = ssw.swu2fsw(matches[i].slice(-2)).slice(1,4);\n          segment = \"R\" + from + \"t\" + to;\n          query = query.replace(matches[i],segment);\n        }\n      }\n  \n      matches = query.match(new RegExp(q_sym,'g'));\n      if (matches){\n        for(i=0; i<matches.length; i+=1) {\n          key = ssw.swu2fsw(matches[i].slice(0,2));\n          if (matches[i].indexOf('f')>-1){\n            key = key.slice(0,4) + 'u' + key.slice(5,6);\n          }\n          if (matches[i].indexOf('r')>-1){\n            key = key.slice(0,5) + 'u';\n          }\n          query = query.replace(matches[i],key);\n        }\n      }\n  \n      return query;\n    },\n    range: function (min,max,hex){\n      var pattern;\n      var re;\n      var diff;\n      var tmax;\n      var cnt;\n      var minV;\n      var maxV;\n      if (!hex) {\n        hex='';\n      }\n      min = (\"000\" + min).slice(-3);\n      max = '' + max;\n      pattern='';\n  \n      if (min===max) {return min;}\n  \n      //ending pattern will be series of connected OR ranges\n      re = [];\n  \n      //first pattern+  10's don't match and the min 1's are not zero\n      //odd number to 9\n      if (!(min[0]==max[0] && min[1]==max[1])) {\n        if (min[2]!='0'){\n          pattern = min[0] + min[1];\n          if (hex) {\n            //switch for dex\n            switch (min[2]){\n            case \"f\":\n              pattern += 'f';\n              break;\n            case \"e\":\n              pattern += '[ef]';\n              break;\n            case \"d\":\n            case \"c\":\n            case \"b\":\n            case \"a\":\n              pattern += '[' + min[2] + '-f]';\n              break;\n            default:\n              switch (min[2]){\n                case \"9\":\n               pattern += '[9a-f]';\n                break;\n              case \"8\":\n                pattern += '[89a-f]';\n                break;\n              default:\n               pattern += '[' + min[2] + '-9a-f]';\n                break;\n              }\n              break;\n            }\n            diff = 15-parseInt(min[2],16) +1;\n            min = '' + ((parseInt(min,16)+diff)).toString(16);\n            re.push(pattern);\n          } else {\n            //switch for dex\n            switch (min[2]){\n            case \"9\":\n              pattern += '9';\n              break;\n            case \"8\":\n              pattern += '[89]';\n              break;\n            default:\n             pattern += '[' + min[2] + '-9]';\n              break;\n            }\n            diff = 9-min[2] +1;\n            min = '' + (min*1 + diff);\n            re.push(pattern);\n          }\n        }\n      }\n      pattern = '';\n  \n      //if hundreds are different, get odd to 99 or ff\n      if (min[0]!=max[0]){\n        if (min[1]!='0'){\n          if (hex){\n            //scrape to ff\n            pattern = min[0];\n            switch (min[1]){\n            case \"f\":\n              pattern += 'f';\n              break;\n            case \"e\":\n              pattern += '[ef]';\n              break;\n            case \"d\":\n            case \"c\":\n            case \"b\":\n            case \"a\":\n              pattern += '[' + min[1] + '-f]';\n              break;\n            case \"9\":\n              pattern += '[9a-f]';\n              break;\n            case \"8\":\n              pattern += '[89a-f]';\n              break;\n            default:\n              pattern += '[' + min[1] + '-9a-f]';\n              break;\n            }\n            pattern += '[0-9a-f]';\n            diff = 15-parseInt(min[1],16) +1;\n            min = '' + (parseInt(min,16)+diff*16).toString(16);\n            re.push(pattern);\n          } else {\n            //scrape to 99\n            pattern = min[0];\n            diff = 9-min[1] +1;\n            switch (min[1]){\n            case \"9\":\n              pattern += '9';\n              break;\n            case \"8\":\n              pattern += '[89]';\n              break;\n            default:\n              pattern += '[' + min[1] + '-9]';\n              break;\n            }\n            pattern += '[0-9]';\n            diff = 9-min[1] +1;\n            min = '' + (min*1 + diff*10);\n            re.push(pattern);\n          }\n        }\n      }\n      pattern = '';\n  \n      //if hundreds are different, get to same\n      if (min[0]!=max[0]){\n        if (hex){\n          diff = parseInt(max[0],16) - parseInt(min[0],16);\n          tmax = (parseInt(min[0],16) + diff-1).toString(16);\n  \n          switch (diff){\n          case 1:\n            pattern = min[0];\n            break;\n          case 2:\n            pattern = '[' + min[0] + tmax + ']';\n            break;\n          default:\n            if (parseInt(min[0],16)>9){\n              minV = 'h';\n            } else {\n              minV = 'd';\n            }\n            if (parseInt(tmax,16)>9){\n              maxV = 'h';\n            } else {\n              maxV = 'd';\n            }\n            switch (minV + maxV){\n            case \"dd\":\n              pattern += '[' + min[0] + '-' + tmax + ']';\n              break;\n            case \"dh\":\n              diff = 9 - min[0];\n              //firs get up to 9\n              switch (diff){\n              case 0:\n                pattern += '[9';\n                break;\n              case 1:\n                pattern += '[89';\n                break;\n              default:\n                pattern += '[' + min[0] + '-9';\n                break;\n              }\n              switch (tmax[0]){\n              case 'a':\n                pattern += 'a]';\n                break;\n              case 'b':\n                pattern += 'ab]';\n                break;\n              default:\n                pattern += 'a-' + tmax + ']';\n                break;\n              }\n              break;\n            case \"hh\":\n              pattern += '[' + min[0] + '-' + tmax + ']';\n              break;\n            }\n          }\n  \n          pattern += '[0-9a-f][0-9a-f]';\n          diff = parseInt(max[0],16) - parseInt(min[0],16);\n          min = '' + (parseInt(min,16)+diff*256).toString(16);\n          re.push(pattern);\n        } else {\n          diff = max[0] - min[0];\n          tmax = min[0]*1 + diff-1;\n  \n          switch (diff){\n          case 1:\n            pattern = min[0];\n            break;\n          case 2:\n            pattern = '[' + min[0] + tmax + ']';\n            break;\n          default:\n            pattern = '[' + min[0] + '-' + tmax + ']';\n            break;\n          }\n          pattern += '[0-9][0-9]';\n          min = '' + (min*1 + diff*100);\n          re.push(pattern);\n        }\n      }\n      pattern = '';\n  \n      //if tens are different, get to same\n      if (min[1]!=max[1]){\n        if (hex){\n          diff = parseInt(max[1],16) - parseInt(min[1],16);\n          tmax = (parseInt(min[1],16) + diff-1).toString(16);\n          pattern = min[0];\n          switch (diff){\n          case 1:\n            pattern += min[1];\n            break;\n          case 2:\n            pattern += '[' + min[1] + tmax + ']';\n            break;\n          default:\n  \n            if (parseInt(min[1],16)>9){\n              minV = 'h';\n            } else {\n              minV = 'd';\n            }\n            if (parseInt(tmax,16)>9){\n              maxV = 'h';\n            } else {\n              maxV = 'd';\n            }\n            switch (minV + maxV){\n            case \"dd\":\n              pattern += '[' + min[1];\n              if (diff>1) {\n                pattern += '-';\n              }\n              pattern += tmax + ']';\n              break;\n            case \"dh\":\n              diff = 9 - min[1];\n              //firs get up to 9\n              switch (diff){\n              case 0:\n                pattern += '[9';\n                break;\n              case 1:\n                pattern += '[89';\n                break;\n              default:\n                pattern += '[' + min[1] + '-9';\n                break;\n              }\n              switch (max[1]){\n              case 'a':\n                pattern += ']';\n                break;\n              case 'b':\n                pattern += 'a]';\n                break;\n              default:\n                pattern += 'a-' + (parseInt(max[1],16)-1).toString(16) + ']';\n                break;\n              }\n              break;\n            case \"hh\":\n              pattern += '[' + min[1];\n              if (diff>1) {\n                pattern += '-';\n              }\n              pattern += (parseInt(max[1],16)-1).toString(16) + ']';\n              break;\n            }\n            break;\n          }\n          pattern += '[0-9a-f]';\n          diff = parseInt(max[1],16) - parseInt(min[1],16);\n          min = '' + (parseInt(min,16)+diff*16).toString(16);\n          re.push(pattern);\n        } else {\n          diff = max[1] - min[1];\n          tmax = min[1]*1 + diff-1;\n          pattern = min[0];\n          switch (diff){\n          case 1:\n            pattern += min[1];\n            break;\n          case 2:\n            pattern += '[' + min[1] + tmax + ']';\n            break;\n          default:\n           pattern += '[' + min[1] + '-' + tmax + ']';\n            break;\n          }\n          pattern += '[0-9]';\n          min = '' + (min*1 + diff*10);\n          re.push(pattern);\n        }\n      }\n      pattern = '';\n  \n      //if digits are different, get to same\n      if (min[2]!=max[2]){\n        if (hex){\n          pattern = min[0] + min[1];\n          diff = parseInt(max[2],16) - parseInt(min[2],16);\n          if (parseInt(min[2],16)>9){\n            minV = 'h';\n          } else {\n            minV = 'd';\n          }\n          if (parseInt(max[2],16)>9){\n            maxV = 'h';\n          } else {\n            maxV = 'd';\n          }\n          switch (minV + maxV){\n          case \"dd\":\n            pattern += '[' + min[2];\n            if (diff>1) {\n              pattern += '-';\n            }\n            pattern += max[2] + ']';\n            break;\n          case \"dh\":\n            diff = 9 - min[2];\n            //firs get up to 9\n            switch (diff){\n            case 0:\n              pattern += '[9';\n              break;\n            case 1:\n              pattern += '[89';\n              break;\n            default:\n              pattern += '[' + min[2] + '-9';\n              break;\n            }\n            switch (max[2]){\n            case 'a':\n              pattern += 'a]';\n              break;\n            case 'b':\n              pattern += 'ab]';\n              break;\n            default:\n              pattern += 'a-' + max[2] + ']';\n              break;\n            }\n  \n            break;\n          case \"hh\":\n            pattern += '[' + min[2];\n            if (diff>1) {\n              pattern += '-';\n            }\n            pattern += max[2] + ']';\n            break;\n          }\n          diff = parseInt(max[2],16) - parseInt(min[2],16);\n          min = '' + (parseInt(min,16) + diff).toString(16);\n          re.push(pattern);\n        } else {\n          diff = max[2] - min[2];\n          pattern = min[0] + min[1];\n          switch (diff){\n          case 0:\n            pattern += min[2];\n            break;\n          case 1:\n            pattern += '[' + min[2] + max[2] + ']';\n            break;\n          default:\n           pattern += '[' + min[2] + '-' + max[2] + ']';\n            break;\n          }\n          min = '' + (min*1 + diff);\n          re.push(pattern);\n        }\n      }\n      pattern = '';\n  \n      //last place is whole hundred\n      if (min[2]=='0' && max[2]=='0') {\n        pattern = max;\n        re.push(pattern);\n      }\n      pattern = '';\n  \n      cnt = re.length;\n      if (cnt==1){\n        pattern = re[0];\n      } else {\n        pattern = re.join(')|(');\n        pattern = '((' + pattern + '))';\n      }\n      return pattern;\n    },\n    rangeu: function (min,max){\n      max = max?max:'';\n      var parts;\n      switch(ssw.chars(min)){\n        case \"fsw\":\n        case \"num\":\n          parts = (min + \"x\" + max).split(\"x\");\n          min = (parseInt(\"1D906\",16) + parseInt(parts[0]) - 500).toString(16);\n          max = (parseInt(\"1D906\",16) + parseInt(parts[1]) - 500).toString(16);\n          if (min<250 || min>749 || min<250 || min>749) return false;\n          break;\n        case \"swu\":\n          parts = ssw.parse(min+max,\"swu\",true);\n          if (parts.type==\"coord\") {\n            min = ssw.swu2hex(parts.all[0].substr(0,2));\n            max = ssw.swu2hex(parts.all[0].substr(2,2));\n          } else if (parts.type==\"symbol\") {\n            if (parts.all.length<2) return false;\n            min = ssw.swu2hex(parts.all[0]);\n            max = ssw.swu2hex(parts.all[1]);\n          } else {\n            return false;\n          }\n        default:\n      }\n        \n      if (min>max) return '';\n      var pattern = '';\n      var cnt,code,str;\n      var re = [];\n  \n      code = parseInt(min,16);\n      str = String.fromCharCode(0xD800 + (((code) - 0x10000) >> 10), 0xDC00 + (((code) - 0x10000) & 0x3FF));\n      min = [str.charCodeAt(0).toString(16).toUpperCase(),str.charCodeAt(1).toString(16).toUpperCase()];\n      code = parseInt(max,16);\n      str = String.fromCharCode(0xD800 + (((code) - 0x10000) >> 10), 0xDC00 + (((code) - 0x10000) & 0x3FF));\n      max = [str.charCodeAt(0).toString(16).toUpperCase(),str.charCodeAt(1).toString(16).toUpperCase()];\n      if (min.length!=2 && max.length!=2) return '';\n      // HEAD // min[0] with range of min[1] to (DFFF or max[1])\n      if (min[0]==max[0]) {\n        if (min[1]==max[1]) {\n          pattern = '\\\\u' + min[0] + '\\\\u' + min[1];\n          re.push(pattern);\n        } else {\n          pattern = '\\\\u' + min[0] + '[\\\\u' + min[1] + '-\\\\u' + max[1] + ']';\n          re.push(pattern);\n        }\n      } else {\n        if(min[1]==\"DFFF\"){\n          pattern = '\\\\u' + min[0] + '\\\\uDFFF';\n        } else {\n          pattern = '\\\\u' + min[0] + '[\\\\u' + min[1] + '-\\\\uDFFF]';\n        }\n        re.push(pattern);\n  \n        // BODY // range of (min[0] +1) to (max[0] -1) with all DC00-DFFF\n        var diff = (parseInt(max[0],16)) - (parseInt(min[0],16));\n        if (diff==2){\n          pattern = '\\\\u' + (parseInt(min[0],16)+1).toString(16).toUpperCase();\n          pattern += '[\\\\uDC00-\\\\uDFFF]';\n          re.push(pattern);\n        }\n        if (diff>2){\n          pattern = '[';\n          pattern += '\\\\u' + (parseInt(min[0],16)+1).toString(16).toUpperCase();\n          pattern += '-\\\\u' + (parseInt(max[0],16)-1).toString(16).toUpperCase();\n          pattern += '][\\\\uDC00-\\\\uDFFF]';\n          re.push(pattern);\n        }\n  \n        // TAIL // max[0] with range of DC00 to max[1]\n        if(max[1]==\"DC00\"){\n          pattern = '\\\\u' + max[0] + '\\\\uDC00';\n        } else {\n          pattern = '\\\\u' + max[0] + '[\\\\uDC00-\\\\u' + max[1] + ']';\n        }\n        re.push(pattern);\n  \n      }\n      cnt = re.length;\n      if (cnt==1){\n        pattern = re[0];\n      } else {\n        pattern = re.join(')|(');\n        pattern = '((' + pattern + '))';\n      }\n      return ssw.decode(pattern);\n    },\n    ranges: function (symfr){\n      var match = symfr.match(new RegExp(ssw.re['swu']['symbol'] + 'f?r?'));\n      if (match){\n        var sym = match[0].slice(0,2);\n        var key = ssw.swu2fsw(sym);\n        var base = key.slice(0,4);\n        var start,end;\n        if (match[0].slice(-2) == 'fr'){\n          start = ssw.fsw2swu(base + \"00\");\n          end = ssw.fsw2swu(base + \"5f\");\n          return ssw.rangeu(start,end);\n        } else if (match[0].slice(-1) == 'r') {\n          start = ssw.fsw2swu(key.slice(0,5) + '0');\n          end = ssw.fsw2swu(key.slice(0,5) + 'f');\n          return ssw.rangeu(start,end);\n        } else if (match[0].slice(-1) == 'f') {\n          var list = [0,1,2,3,4,5].map(function(f){\n            return ssw.fsw2swu(base + f + key.slice(-1));\n          })\n          return \"(\" + list.join(\"|\") + \")\";\n        } else {\n          return sym;\n        }\n      } else {\n        return '';\n      }\n    },\n    regex: function (query,fuzz){\n      query = ssw.query(query);\n      if (!query) {\n        return '';\n      }\n      var matches;\n      var i;\n      var fsw_pattern;\n      var part;\n      var from;\n      var to;\n      var re_range;\n      var segment;\n      var x;\n      var y;\n      var base;\n      var fill;\n      var rotate;\n      if (!fuzz) {\n        fuzz = 20;\n      }\n      var re_sym = 'S[123][0-9a-f]{2}[0-5][0-9a-f]';\n      var re_coord = '[0-9]{3}x[0-9]{3}';\n      var re_word = '[BLMR](' + re_coord + ')(' + re_sym + re_coord + ')*';\n      var re_term = '(A(' + re_sym+ ')+)';\n      var q_range = 'R[123][0-9a-f]{2}t[123][0-9a-f]{2}';\n      var q_sym = 'S[123][0-9a-f]{2}[0-5u][0-9a-fu]';\n      var q_coord = '([0-9]{3}x[0-9]{3})?';\n      var q_var = '(V[0-9]+)';\n      var q_style = '(' + ssw.re['style'] + ')?';\n      var q_term;\n  \n      if (query=='-'){\n        // return [q_styling];\n        return [];\n      }\n      if (query=='Q'){\n        return [re_term + \"?\" + re_word];\n      }\n      if (query=='Q-'){\n        return [re_term + \"?\" + re_word + q_style];\n      }\n      if (query=='QT'){\n        return [re_term + re_word];\n      }\n      if (query=='QT-'){\n        return [re_term + re_word + q_style];\n      }\n      var segments = [];\n      var term = query.indexOf('T')+1;\n      if (term){\n        q_term = '(A';\n        var qat = query.slice(0,term);\n        query = query.replace(qat,'');\n        if (qat == 'QT') {\n          q_term += '(' + re_sym + ')+)';\n        } else {\n          matches = qat.match(new RegExp('(' + q_sym + '|' + q_range + ')','g'));\n          if (matches){\n            var matched;\n            for(i=0; i<matches.length; i+=1) {\n              matched = matches[i].match(new RegExp(q_sym));\n              if (matched){\n                segment = matched[0].slice(0,4);\n                fill = matched[0].slice(4,5);\n                if (fill=='u') {\n                  segment += '[0-5]';\n                } else {\n                  segment += fill;\n                }\n                rotate = matched[0].slice(5,6);\n                if (rotate=='u') {\n                  segment += '[0-9a-f]';\n                } else {\n                  segment += rotate;\n                }\n                q_term += segment;\n              } else {\n                from = matches[i].slice(1,4);\n                to = matches[i].slice(5,8);\n                re_range = ssw.range(from,to,'hex');\n                segment = 'S' + re_range + '[0-5][0-9a-f]';\n                q_term += segment;\n              }\n            }\n            q_term += '(' + re_sym + ')*)';\n          }\n        }\n      }\n      //get the variance\n      matches = query.match(new RegExp(q_var,'g'));\n      if (matches) {\n        fuzz = matches.toString().slice(1)*1;\n      }\n      //this gets all symbols with or without location\n      fsw_pattern = q_sym + q_coord;\n      matches = query.match(new RegExp(fsw_pattern,'g'));\n      if (matches){\n        for(i=0; i<matches.length; i+=1) {\n          part = matches[i].toString();\n          base = part.slice(1,4);\n          segment = 'S' + base;\n          fill = part.slice(4,5);\n          if (fill=='u') {\n            segment += '[0-5]';\n          } else {\n            segment += fill;\n          }\n          rotate = part.slice(5,6);\n          if (rotate=='u') {\n            segment += '[0-9a-f]';\n          } else {\n            segment += rotate;\n          }\n          if (part.length>6){\n            x = part.slice(6,9)*1;\n            y = part.slice(10,13)*1;\n            //now get the x segment range+++\n            segment += ssw.range((x-fuzz),(x+fuzz));\n            segment += 'x';\n            segment += ssw.range((y-fuzz),(y+fuzz));\n          } else {\n            segment += re_coord;\n          }\n          //now I have the specific search symbol\n          // add to general ksw word\n          segment = re_word + segment + '(' + re_sym + re_coord + ')*';\n          if (term) {\n            segment = q_term + segment;\n          } else {\n            segment = re_term + \"?\" + segment;\n          }\n          if (query.indexOf('-')>0){\n            segment += q_style;\n          }\n          segments.push(segment);\n        }\n      }\n      //this gets all ranges\n      fsw_pattern = q_range + q_coord;\n      matches = query.match(new RegExp(fsw_pattern,'g'));\n      if (matches){\n        for(i=0; i<matches.length; i+=1) {\n          part = matches[i].toString();\n          from = part.slice(1,4);\n          to = part.slice(5,8);\n          re_range = ssw.range(from,to,\"hex\");\n          segment = 'S' + re_range + '[0-5][0-9a-f]';\n          if (part.length>8){\n            x = part.slice(8,11)*1;\n            y = part.slice(12,15)*1;\n            //now get the x segment range+++\n            segment += ssw.range((x-fuzz),(x+fuzz));\n            segment += 'x';\n            segment += ssw.range((y-fuzz),(y+fuzz));\n          } else {\n            segment += re_coord;\n          }\n          // add to general ksw word\n          segment = re_word + segment + '(' + re_sym + re_coord + ')*';\n          if (term) {\n            segment = q_term + segment;\n          } else {\n            segment = re_term + \"?\" + segment;\n          }\n          if (query.indexOf('-')>0){\n            segment += q_style;\n          }\n          segments.push(segment);\n        }\n      }\n      if (!segments.length){\n          if (query.indexOf('-')>0){\n            segment += q_style;\n          }\n        segments.push(q_term + re_word);\n      }\n      return segments;\n    },\n    regexu: function (query,fuzz){\n      query = ssw.queryu(query);\n      if (!query) {\n        return '';\n      }\n      var matches;\n      var i;\n      var fsw_pattern;\n      var part;\n      var from;\n      var to;\n      var coord;\n      var re_range;\n      var segment;\n      var x;\n      var y;\n      var base;\n      var fill;\n      var rotate;\n      if (!fuzz) {\n        fuzz = 20;\n      }\n  \n      var re_sym = ssw.re['swu']['symbol'];\n      var re_coord = ssw.re['swu']['coord'];\n      var re_signbox = ssw.re['swu']['box'];\n      var re_seq = ssw.re['swu']['sort'];\n      var re_word = re_signbox + re_coord + '(' + re_sym + re_coord + ')*';\n      var re_term = '(' + re_seq + '(' + re_sym + ')+)';\n  \n      var q_range = 'R' + re_sym + re_sym;\n      var q_sym = re_sym + 'f?r?';\n      var q_coord = '(' + re_coord + ')?';\n      var q_var = '(V[0-9]+)';\n      var q_style = '(' + ssw.re['style'] + ')?';\n      var q_term;\n  \n  \n      if (query=='-'){\n        return ssw.re['style'];\n      }\n      if (query=='Q'){\n        return [ssw.re['swu']['sign']];\n      }\n      if (query=='Q-'){\n        return [ssw.re['swu']['sign'] + \"(\" + ssw.re['style'] + \")?\"];\n      }\n      if (query=='QT'){\n        return [ssw.re['swu']['sort'] + ssw.re['swu']['symbol'] + \"+\" + ssw.re['swu']['box'] + ssw.re['swu']['coord'] + \"(\" + ssw.re['swu']['spatial'] + \")*\"];\n      }\n      if (query=='QT-'){\n        return [ssw.re['swu']['sort'] + ssw.re['swu']['symbol'] + \"+\" + ssw.re['swu']['box'] + ssw.re['swu']['coord'] + \"(\" + ssw.re['swu']['spatial'] + \")*(\" + ssw.re['style'] + \")?\"];\n      }\n      var segments = [];\n      var sym,key;\n      var term = query.indexOf('T')+1;\n      if (term){\n        q_term = '(' + ssw.re['swu']['sort'];\n        var qat = query.slice(0,term);\n        query = query.replace(qat,'');\n        if (qat == 'QT') {\n          q_term += '(' + re_sym + ')+)';\n        } else {\n          matches = qat.match(new RegExp('(' + q_sym + '|' + q_range + ')','g'));\n          if (matches){\n            var matched;\n            for(i=0; i<matches.length; i+=1) {\n              matched = matches[i].match(new RegExp('^' + q_sym));\n              if (matched){\n                q_term += ssw.ranges(matched[0]);\n              } else {\n                from = ssw.swu2fsw(matches[i].slice(1,3));\n                to = ssw.swu2fsw(matches[i].slice(-2));\n                from = ssw.fsw2swu(from.slice(0,4) + '00');\n                to = ssw.fsw2swu(to.slice(0,4) + '5f');\n                q_term += ssw.rangeu(from,to);\n              }\n            }\n            q_term += '(' + re_sym + ')*)';\n          }\n        }\n      }\n      //get the variance\n      matches = query.match(new RegExp(q_var,'g'));\n      if (matches) {\n        fuzz = matches.toString().slice(1)*1;\n      }\n      //this gets all symbols with or without location\n      fsw_pattern = q_sym + q_coord;\n      matches = query.match(new RegExp(\"(\" + q_range + q_coord + \"|\" + q_sym + q_coord + \")\",'g'));\n  \n      if (matches){\n        for(i=0; i<matches.length; i+=1) {\n          part = matches[i].toString();\n          if (part[0] != \"R\"){\n            sym = part.match(new RegExp(q_sym))[0];\n            segment = ssw.ranges(sym);\n            if (sym.length>part.length){\n              coord = ssw.swu2fsw(part.slice(-4)).split('x');\n              x = coord[0];\n              y = coord[1];\n              //now get the x segment range+++\n              segment += ssw.rangeu(ssw.fsw2swu((x-fuzz) + 'x' + (x+fuzz)));\n              segment += ssw.rangeu(ssw.fsw2swu((y-fuzz) + 'x' + (y+fuzz)));\n            } else {\n              segment += re_coord;\n            }\n            //now I have the specific search symbol\n            // add to general swu word\n            segment = re_word + segment + '(' + re_sym + re_coord + ')*';\n            if (term) {\n              segment = q_term + segment;\n            } else {\n              segment = re_term + \"?\" + segment;\n            }\n            if (query.indexOf('-')>0){\n              segment += q_style;\n            }\n            segments.push(segment);\n          } else {\n          //ranges\n            part = matches[i].toString();\n            from = ssw.swu2fsw(part.slice(1,3));\n            to = ssw.swu2fsw(part.slice(3,5));\n            from = ssw.fsw2swu(from.slice(0,4) + '00');\n            to = ssw.fsw2swu(to.slice(0,4) + '5f');\n            segment = ssw.rangeu(from,to);\n  \n            if (part.length>5){\n              coord = ssw.swu2fsw(part.slice(5,9)).split('x');\n              x = coord[0];\n              y = coord[1];\n              //now get the x segment range+++\n              segment += ssw.rangeu(ssw.fsw2swu((x-fuzz) + 'x' + (x+fuzz)));\n              segment += ssw.rangeu(ssw.fsw2swu((y-fuzz) + 'x' + (y+fuzz)));\n            } else {\n              segment += re_coord;\n            }\n            // add to general swu word\n            segment = re_word + segment + '(' + re_sym + re_coord + ')*';\n            if (term) {\n              segment = q_term + segment;\n            } else {\n              segment = re_term + \"?\" + segment;\n            }\n            if (query.indexOf('-')>0){\n              segment += q_style;\n            }\n            segments.push(segment);\n          }\n        }\n      }\n      if (!segments.length){\n          if (query.indexOf('-')>0){\n            segment += q_style;\n          }\n        segments.push(q_term + re_word);\n      }\n      return segments;\n    },\n    results: function (query,text,lane){\n      if (!text) {return [];}\n      if(\"BLMR\".indexOf(lane) === -1 || lane.length>1) {\n        lane='';\n      }\n      var pattern;\n      var matches;\n      var parts;\n      var words;\n      var re = ssw.regex(query);\n      if (!re) {return [];}\n      var i;\n      for(i=0; i<re.length; i+=1) {\n        pattern = re[i];\n        matches = text.match(new RegExp(pattern,'g'));\n        if (matches){\n          text = matches.join(' ');\n        } else {\n          text ='';\n        }\n      }\n      if (text){\n        if (lane){\n          text = text.replace(/B/g,lane);\n          text = text.replace(/L/g,lane);\n          text = text.replace(/M/g,lane);\n          text = text.replace(/R/g,lane);\n        }\n        parts = text.split(' ');\n        words = parts.filter(function(element) {\n          return element in parts ? false : parts[element] = true;\n        }, {});\n      } else {\n        words = [];\n      }\n      return words;\n    },\n    resultsu: function (query,text,lane){\n      if (!text) {return [];}\n      if(lane && !lane.match(new RegExp(ssw.re['swu']['box']))) {\n        lane='';\n      }\n      var pattern;\n      var matches;\n      var parts;\n      var words;\n      var re = ssw.regexu(query);\n      if (!re) {return [];}\n      var i;\n      for(i=0; i<re.length; i+=1) {\n        pattern = re[i];\n        matches = text.match(new RegExp(pattern,'g'));\n        if (matches){\n          text = matches.join(' ');\n        } else {\n          text ='';\n        }\n      }\n      if (text){\n        if (lane){\n          text = text.replace(/\\uD836\\uDC01/g,lane);\n          text = text.replace(/\\uD836\\uDC02/g,lane);\n          text = text.replace(/\\uD836\\uDC03/g,lane);\n          text = text.replace(/\\uD836\\uDC04/g,lane);\n        }\n        parts = text.split(' ');\n        words = parts.filter(function(element) {\n          return element in parts ? false : parts[element] = true;\n        }, {});\n      } else {\n        words = [];\n      }\n      return words;\n    },\n    lines: function (query,text,lane){\n      if (!text) {return [];}\n      if(\"BLMR\".indexOf(lane) === -1 || lane.length>1) {\n        lane='';\n      }\n      var pattern;\n      var matches;\n      var parts;\n      var words;\n      var re = ssw.regex(query);\n      if (!re) {return [];}\n      var i;\n      for(i=0; i<re.length; i+=1) {\n        pattern = re[i];\n        pattern = '^' + pattern + '.*';\n        matches = text.match(new RegExp(pattern,'mg'));\n        if (matches){\n          text = matches.join(\"\\n\");\n        } else {\n          text ='';\n        }\n      }\n      if (text){\n        if (lane){\n          text = text.replace(/B/g,lane);\n          text = text.replace(/L/g,lane);\n          text = text.replace(/M/g,lane);\n          text = text.replace(/R/g,lane);\n        }\n        parts = text.split(\"\\n\");\n        words = parts.filter(function(element) {\n          return element in parts ? false : parts[element] = true;\n        }, {});\n      } else {\n        words = [];\n      }\n      return words;\n    },\n    linesu: function (query,text,lane){\n      if (!text) {return [];}\n      if(lane && !lane.match(new RegExp(ssw.re['swu']['box']))) {\n        lane='';\n      }\n      var pattern;\n      var matches;\n      var parts;\n      var words;\n      var re = ssw.regexu(query);\n      if (!re) {return [];}\n      var i;\n      for(i=0; i<re.length; i+=1) {\n        pattern = re[i];\n        pattern = '^' + pattern + '.*';\n        matches = text.match(new RegExp(pattern,'mg'));\n        if (matches){\n          text = matches.join(\"\\n\");\n        } else {\n          text ='';\n        }\n      }\n      if (text){\n        if (lane){\n          text = text.replace(/\\uD836\\uDC01/g,lane);\n          text = text.replace(/\\uD836\\uDC02/g,lane);\n          text = text.replace(/\\uD836\\uDC03/g,lane);\n          text = text.replace(/\\uD836\\uDC04/g,lane);\n        }\n        parts = text.split(\"\\n\");\n        words = parts.filter(function(element) {\n          return element in parts ? false : parts[element] = true;\n        }, {});\n      } else {\n        words = [];\n      }\n      return words;\n    },\n    convert: function (fsw,flags){\n      // update to new set of flags\n      // A - exact symbol in temporal prefix\n      // a - general symbol in temporal prefix\n      // S - exact symbol in spatial signbox\n      // s - general symbol in spatial signbox\n      // L - spatial signbox symbol at location\n      var i;\n      var query = '';\n      if (ssw.sign(fsw)){\n        if (/^[Aa]?([Ss]L?)?$/.test(flags)){\n          var re_base = 'S[123][0-9a-f]{2}';\n          var re_sym = re_base + '[0-5][0-9a-f]';\n          var re_coord = '[0-9]{3}x[0-9]{3}';\n          var matches;\n          var matched;\n  \n          if (flags.indexOf('A') > -1 || flags.indexOf('a') > -1) {\n            //exact symbols or general symbols in order\n            matches = fsw.match(new RegExp('A(' + re_sym + ')*','g'));\n            if (matches){\n              matched = matches[0];\n              if (flags.indexOf('A') > -1) {\n                query += matched + \"T\";\n              } else {\n                matches = matched.match(new RegExp(re_base,'g'));\n                query += \"A\";\n                for(i=0; i<matches.length; i+=1) {\n                  query += matches[i] + \"uu\";\n                }\n                query += \"T\";\n              }\n            }\n          }\n  \n          if (flags.indexOf('S') > -1 || flags.indexOf('s') > -1) {\n            //exact symbols or general symbols in spatial\n            matches = fsw.match(new RegExp(re_sym + re_coord,'g'));\n            if (matches){\n              for(i=0; i<matches.length; i+=1) {\n                if (flags.indexOf('S') > -1) {\n                  query += matches[i].slice(0,6);\n                } else {\n                  query += matches[i].slice(0,4) + \"uu\";\n                }\n                if (flags.indexOf('L') > -1) {\n                  query += matches[i].slice(6,13);\n                }\n              }\n            }\n          }\n        }\n      }\n      return query?\"Q\" + query:'';\n    },\n    convertu: function (swu,flags){\n      // update to new set of flags\n      // A - exact symbol in temporal prefix\n      // a - general symbol in temporal prefix\n      // S - exact symbol in spatial signbox\n      // s - general symbol in spatial signbox\n      // L - spatial signbox symbol at location\n      var i;\n      var query = '';\n      if (ssw.sign(swu)){\n        if (/^[Aa]?([Ss]L?)?$/.test(flags)){\n          var matches;\n          var matched;\n  \n          if (flags.indexOf('A') > -1 || flags.indexOf('a') > -1) {\n            //exact symbols or general symbols in order\n            matches = swu.match(new RegExp(ssw.re['swu']['sort'] + '(' + ssw.re['swu']['symbol'] + ')*','g'));\n            if (matches){\n              matched = matches[0];\n              if (flags.indexOf('A') > -1) {\n                query += matched.replace(/\\uD836\\uDC00/g,\"A\") + \"T\";\n              } else {\n                matches = matched.match(new RegExp(ssw.re['swu']['symbol'],'g'));\n                query += \"A\";\n                for(i=0; i<matches.length; i+=1) {\n                  query += matches[i] + \"fr\";\n                }\n                query += \"T\";\n              }\n            }\n          }\n  \n          if (flags.indexOf('S') > -1 || flags.indexOf('s') > -1) {\n            //exact symbols or general symbols in spatial\n            matches = swu.match(new RegExp(ssw.re['swu']['symbol'] + ssw.re['swu']['coord'],'g'));\n            if (matches){\n              for(i=0; i<matches.length; i+=1) {\n                if (flags.indexOf('S') > -1) {\n                  query += matches[i].slice(0,2);\n                } else {\n                  query += matches[i].slice(0,2) + \"fr\";\n                }\n                if (flags.indexOf('L') > -1) {\n                  query += matches[i].slice(2,6);\n                }\n              }\n            }\n          }\n        }\n      }\n      return query?\"Q\" + query:'';\n    },\n    paragraph: function (signtext){\n      var chars = ssw.chars(signtext);\n      var signs = (ssw.parse(signtext,chars,true).all||[]).map(function(fsw) {\n        if (chars == \"swu\"){\n          fsw = ssw.swu2fsw(fsw);\n        }\n        var zoom = fsw.match(/Z([0-9]+(\\.[0-9]+)?)/);\n        zoom = zoom?parseFloat(zoom[1]):1;\n        var bbox = ssw.bbox(fsw).split(' ');\n        var w = (bbox[1]-bbox[0]) * zoom;\n        var h = (bbox[3]-bbox[2]) * zoom;\n        var adj = (1000 - bbox[0] - bbox[1])*zoom;\n        adj += 2; //adjust for center dotted line\n        if (fsw.indexOf('L')>-1) adj += 150;\n        if (fsw.indexOf('R')>-1) adj -= 150;\n        var style = 'width: ' + w + 'px;height: ' + h + 'px;'\n        if (adj>0) {\n          style += 'margin-right: ' + adj + 'px;'\n        } else if (adj<0) {\n          adj = -adj;\n          style += 'border-left: ' + adj + 'px solid transparent;';\n        }\n        return '<div class=\"sign\" style=\"' + style + '\">' + ssw.svg(fsw,{copy:chars}) + '</div>';\n      });\n      return '<span class=\"outside\"><span class=\"middle\"><span class=\"inside\">' + signs.join('') + '</span></span></span>';\n    }\n  };\n\n  export default ssw;","import ssw from './ssw';\n\nconst swuChange = (oned) => {\n    var signtext = oned.trim();\n    var signs = ssw.paragraph(signtext);\n    return signs;\n}\n\nexport default swuChange;","import { useState } from 'react';\nimport './App.css';\nimport Translate from './components/Translate';\nimport findClosest from './functions/findClosest';\nimport swuChange from './functions/towd';\n\nfunction App() {\n  const [translated, setTranslated] = useState('');\n  const [towd, setTowd] = useState('');\n  const [resultEnglish, setResultEnglish] = useState('');\n\n  const translateToSignWriting = async (text) => {\n    if(text === ''){\n      setTranslated('Please Type the text');\n    }\n    else{\n      const result = await findClosest(text);\n        if(result === 'not found'){\n          setTranslated('Our Data Set is limited,for now we could not found the sentence you want');\n        }\n        else{\n          setTranslated(result[0]);\n          const td = swuChange(result[0]);\n          setTowd(td);\n          setResultEnglish(result[1]);\n        }\n  }\n  }\n\n  return (\n    <div className=\"p-3 d-flex flex-column justify-content-center align-items-center app\">\n      <h3 className=\"m-3\">English to Sign Writing Translator</h3>\n      <Translate translate={translateToSignWriting}/>\n      <p className=\"m-3 font-medium \" >The 1D (Formal Sign writing) Translation for word \"{resultEnglish}\" :</p>\n      <p className=\"ssw-one-d font-medium \">{translated}</p>\n      <p>The 2D Format:</p>\n      <div className=\"signtext\" dangerouslySetInnerHTML={{__html: towd}}></div>\n    </div>\n  );\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}